<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 20 Mar 2021 14:27:46 +0000</pubDate>
    <lastBuildDate>Sat, 20 Mar 2021 14:27:46 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Обновил зипперы</title>
        <description>&lt;p&gt;&lt;a href=&quot;/podlodka/&quot;&gt;В подкасте с подлодкой&lt;/a&gt; я пытался объяснить зипперы. Пытался, —
потому что формат подкаста не подходит для таких вещей. Нужна маркерная доска,
схемы и всё такое. На словах — ерунда, только заинтересовать.&lt;/p&gt;

&lt;p&gt;А потом вспомнил, что полгода назад написал руководство по зипперам. Оно разбито
на восемь постов и по объёму тянет на главу книги — около 30 страниц. Сразу
после выпуска я вернулся к ним и отредактировал: почистил текст, доработал
примеры и код.&lt;/p&gt;

&lt;p&gt;Уверен, в интернете нет более подробного текста по зипперам на русском. Да и на
английском не густо: обрывочные посты в блогах и бородатые пейперы. Последние
хороши, но на Хаскеле, что не наш метод. А у меня — сплошной шоколад. Скоро
будет версия на английском.&lt;/p&gt;

&lt;p&gt;Пользуйтесь!&lt;/p&gt;

&lt;h2 id=&quot;оглавление&quot;&gt;Оглавление&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-1/&quot;&gt;Зипперы (часть 1). Азы навигации&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-2/&quot;&gt;Зипперы (часть 2). Автонавигация&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-3/&quot;&gt;Зипперы (часть 3). XML-зипперы&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-4/&quot;&gt;Зипперы (часть 4). Поиск в XML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-5/&quot;&gt;Зипперы (часть 5). Редактирование&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-6/&quot;&gt;Зипперы (часть 6). Вирутальные деревья. Обмен валют&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-7/&quot;&gt;Зипперы (часть 7). Обход в ширину. Улучшенный обмен валют&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/clj-zippers-8/&quot;&gt;Зипперы (часть 8). Заключение&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/zippers-update/</link>
        <guid isPermaLink="true">https://grishaev.me/zippers-update/</guid>
        
        <category>zippers</category>
        
        
      </item>
    
      <item>
        <title>Тултипы</title>
        <description>&lt;p&gt;Дизайнеры Гугла совсем офонарели. Всплывающее окно показывает другие всплывающие
элементы. Никого не парит, что места с гулькин нос, и ничего не видно.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/google-ui/drive.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Тултипы и попапы — настоящая болезнь дизайнеров. Сегодня, что бы ты ни открыл —
настольную программу или сайт — интерфейс взрывается тултипами. Или красными
шариками, которые означают непрочитанные сообщения. Будь ты хоть трижды аноним
за Тором и VPN, всё равно — у нас персональное сообщение именно для тебя.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/google-ui/doc.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Всплывающие элементы – признак импотенции дизайнера, примерно как три точки с
выпадашкой. Жаловаться можно бесконечно — достаточно открыть любой современный
сайт. Но я очень надеюсь, что хотя бы один дизайнер прочтёт этот текст и однажды
откажется следовать идиотизму.&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/google-tooltip/</link>
        <guid isPermaLink="true">https://grishaev.me/google-tooltip/</guid>
        
        <category>ui</category>
        
        <category>interface</category>
        
        <category>tooltips</category>
        
        
      </item>
    
      <item>
        <title>Подкаст с Подлодкой</title>
        <description>
&lt;p&gt;На прошлой неделе выступил в подкасте &lt;a href=&quot;https://podlodka.io/&quot;&gt;“Подлодка”&lt;/a&gt;. Говорили про Кложу
и связанные с ней вещи: философию, окружение, зарплаты и поиск работы.&lt;/p&gt;

&lt;p&gt;Итоговая версия &lt;a href=&quot;http://bit.ly/podlodka-206&quot;&gt;на SoundCloud&lt;/a&gt;:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;300&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; allow=&quot;autoplay&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1001431294&amp;amp;color=%23ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;
&lt;div style=&quot;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&quot;&gt;&lt;a href=&quot;https://soundcloud.com/podlodka&quot; title=&quot;Podlodka Podcast&quot; target=&quot;_blank&quot; style=&quot;color: #cccccc; text-decoration: none;&quot;&gt;Podlodka Podcast&lt;/a&gt; · &lt;a href=&quot;https://soundcloud.com/podlodka/podlodka-206-clojure&quot; title=&quot;Podlodka #206 – Clojure&quot; target=&quot;_blank&quot; style=&quot;color: #cccccc; text-decoration: none;&quot;&gt;Podlodka #206&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Черновой стрим &lt;a href=&quot;https://www.youtube.com/watch?v=UY6xTBtkclE&quot;&gt;на Ютубе&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/UY6xTBtkclE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Ещё ссылки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apple.co/2vCBRcs&quot;&gt;iTunes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bit.ly/32lGgNC&quot;&gt;Я.Музыка&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/podlodka/</link>
        <guid isPermaLink="true">https://grishaev.me/podlodka/</guid>
        
        <category>podcast</category>
        
        
      </item>
    
      <item>
        <title>Правила</title>
        <description>&lt;p&gt;Есть такой популярный жанр — правила жизни знаменитого человека. Актер, певец
или политик рассказывают, что они встают в пять утра, всегда говорят правду или
верят в бога. Сюда же относятся правила успеха — быть отзывчивым, больше давать,
чем брать, посылать в космос лучи добра.&lt;/p&gt;

&lt;p&gt;Из бульварной сферы жанр перекочевал в айтишный, и теперь люди читают то же
самое, только под другим соусом. Или не читают, а смотрят или слушают в
подкастах. Никого не осуждаю за это, но важно понимать следующее.&lt;/p&gt;

&lt;p&gt;Если вы всерьез интересуетесь чьими-то правилами жизни, то неплохо бы спросить
себя, как они коррелируют с успехом того человека. Например, писатель встает в
пять утра. Как это ему помогает? Я знаю много людей, которые встают рано, но они
ничего не написали. Кто-то пьет только дистиллированную воду, но в тридцать
шесть выглядит на тридцать пять — особого эффекта молодости не наблюдаю.&lt;/p&gt;

&lt;p&gt;У огромного числа людей своя ментальная модель добра и вселенской
справедливости, а также того, что кому и на каком свете зачтется. Говорить с
ними об этом все равно что наблюдать ожившие картины Босха — мрак и безумие.&lt;/p&gt;

&lt;p&gt;У всех у нас свои правила, и важны не они сами, а как мы к ним пришли. Тот, кто
встает в пять утра, скорей всего выстроил так свой день в силу множества
обстоятельств. Помню, я тоже двигал свой биоритм туда и сюда по многим причинам
— семейным и личным. И мое утверждение о том, что надо вставать во столько-то
будет звучать глупо без полного контекста. А контексту обычно нет места в жанре
правил. Там должно быть все четко, чтобы легко было запомнить.&lt;/p&gt;

&lt;p&gt;Главное правило в том, что не надо тащить в свое гнездо чужие правила, будь они
хоть от Аллы Пугачевой, Нельсона Манделлы и Илона Маска. За каждым правилом
стоит сложный контекст, который вы все равно не поймете. Это как пустая коробка
от дорогого товара — только похвастать в соцсети. Истинная цель — вывести свои
правила, которые опираются только на ваш опыт. Одно свое правило стоит тысячи
мотивирующих цитат, даже если перечит им.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/rules/</link>
        <guid isPermaLink="true">https://grishaev.me/rules/</guid>
        
        <category>life</category>
        
        <category>rules</category>
        
        
      </item>
    
      <item>
        <title>Абстрактный слой</title>
        <description>&lt;p&gt;Все хорошо, задача ясна, готов сесть и заимплементить. Но нет, приходит упырь и
говорит: решение, хоть и простое, не отвечает нашим принципам и не следует
общему стилю. Надо добавить абстрактный слой, чтобы было больше гибкости.&lt;/p&gt;

&lt;p&gt;Упыря хочется убить, но похоже, он и правда уверен в своих словах. Понятно, если
бы он просто хотел мне нагадить. Но в его проекте та же хрень: абстракция на
абстракции. Надо разобраться.&lt;/p&gt;

&lt;p&gt;Если убрать лишние слова, перед нами выбор. А) быстро сделать задачу и,
возможно, в будущем её доработать. Б) делать задачу долго, и, возможно, уже не
касаться ее в будущем.&lt;/p&gt;

&lt;p&gt;Важно понимать, что в обоих случаях “возможно” означает “придется по-любому” или
“никогда не придется”. Что это значит? То, что в реальности доработка не зависит
от технической реализации. Если это важная фича, которой будут постоянно
пользоваться, улучшать ее придётся при любой реализации. И наоборот — если фичей
пользуются мало, новых усилий скорей всего не понадобится.&lt;/p&gt;

&lt;p&gt;В выборе А против Б нормальный человек поймет, что лучше взять А — быстро
достичь результата и улучшать, отталкиваясь от ситуации. Этот вариант обещает
успех сейчас и, возможно, труд в будущем. Вариант Б означает труд сейчас, и,
возможно, успех в будущем. Если вы сомневаетесь, я просто развожу руками.&lt;/p&gt;

&lt;p&gt;Опыт показывает, что худшее, что можно сделать в ситуации — спорить с
упырем. Если молча перетерпеть, он уползет обратно в свое болото, и никто про
него не вспомнит. Но если начнёте срач, то сделаете упырю подарок — народ
заметит дискуссию, и подключатся посторонние. А кто-то из посторонних, хотите
или нет, встанет на сторону упыря.&lt;/p&gt;

&lt;p&gt;Ещё хуже — упырь оттянет на себя мнение руководства, и прощай счастливая
жизнь. Вас заставят писать два слоя абстракций, которые пригодятся в лучшем
случае через три года. Или никогда. Позже упырь уволится, оставив команду с
абстрактным кодом. На его место придет новичок, и круг замкнется.&lt;/p&gt;

&lt;p&gt;Я к тому, что надо быть очень осторожным, когда в обсуждение залезает подобный
персонаж. Неумелыми фразами можно сильно испортить себе жизнь. Ни пуха.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/abs-layer/</link>
        <guid isPermaLink="true">https://grishaev.me/abs-layer/</guid>
        
        <category>life</category>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>(Не) предлагай</title>
        <description>&lt;p&gt;Полезный совет. Если вы что-то спрашиваете, иногда полезно сразу предложить
варианты, чтобы собеседнику было легче ответить. Этим вы сэкономите ему нервы, и
он будет благодарен за помощь.&lt;/p&gt;

&lt;p&gt;Пример. У вас нет задач, и вы спрашиваете менеджера, чем заняться. Может быть,
менеджер на звонке, у него что-то горит, и прямо сейчас искать задачу
некогда. Но открыто сказать “я не знаю” он не может, потому что это вроде не
круто. Поэтому к вопросу надо добавить встречное предложение: могу эту задачу и
вон ту. Что лучше? Менеджеру остается только выбрать из двух.&lt;/p&gt;

&lt;p&gt;Другой пример. Спрашиваете у тимлида (или кто там у вас), какой выбрать
технический подход к задаче. Будет невежливо задать вопрос и тупо
ждать. Очевидно, тут нужно исследование. По каждому варианту соберите плюсы и
минусы, напишите короткий текст и уже с этим идите к тимлиду (или к кому там у
вас).&lt;/p&gt;

&lt;p&gt;В общем случае это называется “сделать домашку” — заранее выполнить часть
работы.&lt;/p&gt;

&lt;p&gt;А иногда свои предложения лучше приберечь. Если вы ведёте переговоры или
допытываетесь до важной информации, предположения могут всё
разрушить. Собеседник рассердится на то, что вы не слушаете и гнёте свою
линию. Или ему проще согласиться, чем объяснить сложную тему.&lt;/p&gt;

&lt;p&gt;Пример. В разговоре с заказчиком мы давим на технические детали. Internet
Explorer уже не используется, нужно мобильное приложение, а код следует очистить
от легаси. Пытливый слушатель узнает, что основная аудитория — люди за сорок из
госсектора с кнопочными телефонами. А программа должна работать с отечественным
кассовым аппаратом по серийному порту.&lt;/p&gt;

&lt;p&gt;Еще пример. Ребенок прогуливает школу из-за конфликта со сверстниками. Ему проще
согласиться с родителем, что это из-за лени, чем объяснить конфликт. Так
родитель остался не в курсе проблем.&lt;/p&gt;

&lt;p&gt;Поэтому: иногда предлагай, а иногда не предлагай. По ситуации.&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/propose/</link>
        <guid isPermaLink="true">https://grishaev.me/propose/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Быстрее</title>
        <description>&lt;p&gt;Совет тем, кто что-либо организует: делайте всё быстро.&lt;/p&gt;

&lt;p&gt;Как проходит школьная линейка? Дети с родителями пришли и ждут. На сцене
суетятся, ходят туда-сюда. Начинают с задержкой в двадцать минут. Слово
директору. Слово завучу. Слово заслуженной учительнцие. Слово
депутату-спонсору-единоросу. Слово ветерану. Потом, худо-бедно, начинается
сценка про пропавший огонь знаний.&lt;/p&gt;

&lt;p&gt;Как проходят спортивные соревнования? Дети с родителями пришли и ждут. Все на
месте, абсолютно все. Нет, тренер ходит с листочком взад-перед. Начинают с
опозданием в полчаса. Слово директору. Слово заслуженному тренеру. Гимн
России. Потом, худо-бедно, начинаются соревнования.&lt;/p&gt;

&lt;p&gt;Главное правило в том, что заложенное время только увеличивается, но никогда не
уменьшается. Потеряется переходник, сядут батарейки в микрофоне. Ноут уйдет в
перезагрузку (конечно, с обновлением винды). Человек забудет речь и будет
повторять один тезис по пять раз. Затяжкой страдают даже мероприятия за деньги,
а уж любительские — подавно.&lt;/p&gt;

&lt;p&gt;Каждый этап мероприятия надо проводить как можно короче. Например, давать слово
только одному человеку, а не трём. Договориться, что тот самый чел составит речь
на бумажке и выучит, при этом слово должно быть не больше трех минут. Не может —
возьмите другого. Пусть первый напишет, второй говорит.&lt;/p&gt;

&lt;p&gt;Начинать всегда вовремя. Многие проблемы можно решить в полете: менять номера
местами, что-то пропускать. Для этого нужен помощник и находчивость. Если ни
того, ни другого нет, организовывать что-либо ещё рано.&lt;/p&gt;

&lt;p&gt;Хорошая организация — забота о зрителях и уважение к ним. Вы наверное думаете,
что зрители не замечают хорошее проведение, потому что так везде. Это не
так. Если линейка или утренник прошли за сорок минут как по маслу, я обязательно
замечу это вслух. И все говорят — да, и дети не устали, организаторы молодцы.&lt;/p&gt;

&lt;p&gt;Быстрее надо, быстрее.&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/do-faster/</link>
        <guid isPermaLink="true">https://grishaev.me/do-faster/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Заказные письма</title>
        <description>&lt;p&gt;Заказные письма — редкостный идиотизм. Открываешь почтовый ящик и видишь
квитанцию на заказное письмо. То есть почтальон, вместо того, чтобы принести
&lt;em&gt;письмо&lt;/em&gt;, принес &lt;em&gt;бумажку о том&lt;/em&gt;, что пришло письмо. Идешь с бумажкой его
забирать. В итоге сгоняли двух людей там, где хватило бы одного. Еще и стоит
денег. Мне кажется, надо быть реально каким-то канцелярским сухарем, чтобы слать
заказные письма: ни логики, ни экономии, ни заботы о людях.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/pisma/</link>
        <guid isPermaLink="true">https://grishaev.me/pisma/</guid>
        
        <category>pisma</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Цвета ячеек в таблицах</title>
        <description>&lt;p&gt;&lt;em&gt;Эта заметка для тех, кто работает в Экселе и Гугло-таблицах. Прочтите
обязательно.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Итак, вы вбили в табличку данные, например сведения о заказах в вашем
магазине. Выглядит прекрасно:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011322-89437c00-67a8-11eb-842f-3055519dbe5c.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Затем данные поступают в работу. Их нужно обновлять: помечать просроченные
заказы, ошибки логистики, фиксировать звонки. Проще всего это сделать
цветом. Например, красным пометим тех, у кого сбой в доставке. Красный, потому
что это серьезно:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011328-8b0d3f80-67a8-11eb-830c-406f4713c8ec.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Выделим желтым тех, кому не удалось дозвониться:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011333-8c3e6c80-67a8-11eb-93cc-8c1fa55808bb.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Зеленым — тех, кто уже получил заказ, потому что зеленый цвет позитива. Один
заказ еще в сборке, поэтому волноваться нечего. Но все же пометим его серым,
нейтральным цветом. Вот что получилось:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011334-8cd70300-67a8-11eb-9fd4-2b7e32b78cc6.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Я думаю, понятно, что так делать не надо. Знаю, все так делают, и я сам до
недавнего времени тоже. Но это не повод продолжать плохую практику. Объясню, в
чем именно проблема и как вести табличку правильно.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Логику цвета нужно угадывать. Мысль о том, что желтый — внимание, а красный —
опасность, основана ни на чем. Критический заказ вполне может быть оранжевым, а
ошибка доставки — синим (случай из практики). Если вы добавили цвет, приходится
объяснять, что он значит. Эта семантика тупо теряется.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Рано или поздно данные нужно экспортировать в CSV для программной
обработки. Поздравляю — все ваши цвета пойдут по одному месту. В CSV нет понятия
цвета. Вам придется создать колонки, которые объясняют цвет.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Из красивой таблицы получился фейерверк, на который невозможно
смотреть. Нельзя выделить все — только что-то малое на общем фоне. Если выделено
все, то на самом деле не выделено ничего — мозг отказывается это воспринимать.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Личный фактор. Меня бесит, когда в таблицу приходит кто-то левый и начинает
красить. Крась у себя. Перед тем, как что-то отмечать цветом, хотя бы спроси,
как лучше поступить. Цвет – последнее, что я посоветую.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Вот что надо сделать, чтобы избежать цветового хаоса.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Завести отдельное поле “статус” или “состояние”. В нем писать простое емкое
слово: сборка, доставка, получено, ошибка. Все таблицы поддерживают
автодополнение по столбцу, поэтому достаточно написать одну букву и нажать
ввод. Программист бы сказал, что это перечисление.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011335-8d6f9980-67a8-11eb-8f18-156b24346adb.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Мне возразят: цвет виден отовсюду, а колонка может уплыть. Если она так важна,
перенесите ее в начало и закрепите.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011337-8d6f9980-67a8-11eb-80c1-97e800f3680c.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Кроме состояния, у заказа может быть много других отметок, которые нужно
фиксировать. Например, факт звонка или отзыва клиента. Заводим логическое поле
“звонили?” или “отзыв?”, в которые ставим TRUE. При необходимости добавим хоть
сто таких полей.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011339-8e083000-67a8-11eb-80ca-382f22b963d1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Используйте фильтры! Выделяем шапку и нажимаем воронку. Выставляем отбор по
любому полю, например те клиенты, кто получил заказ, но которым еще не
позвонили. Фильтры можно сохранять с понятными именами. В Гугло-доке фильтры
бывают глобальные и персональные, когда другие пользователи не замечают их в
процессе работы.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011342-8e083000-67a8-11eb-80c4-6ac01ecddc55.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Вспомним, от чего мы пришли:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/igrishaev.public/1059232/107011334-8cd70300-67a8-11eb-9fd4-2b7e32b78cc6.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ужас, ужас.&lt;/p&gt;

&lt;p&gt;Электронные таблицы — великая вещь. Они знакомы нам со школьной скамьи, но мы
знаем только основы и считаем, что этого достаточно. Это не так — время от
времени нужно пересматривать знания. Дурная привычка выделять цветом — тот самый
случай.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/excel-colors/</link>
        <guid isPermaLink="true">https://grishaev.me/excel-colors/</guid>
        
        <category>programming</category>
        
        <category>excel</category>
        
        <category>colors</category>
        
        
      </item>
    
      <item>
        <title>Make makefiles</title>
        <description>&lt;p&gt;У меня две простые просьбы:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;пишите make-файлы;&lt;/li&gt;
  &lt;li&gt;не приставайте к тем, кто их пишет.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Тогда все будет хорошо.&lt;/p&gt;

&lt;p&gt;Теперь длинно. Когда мы садимся за проект, то запускаем в терминале
команды. Сбилдить uberjar, образ докера, переколбасить какие-то файлы. Например:&lt;/p&gt;

&lt;!-- more --&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build &lt;span class=&quot;nt&quot;&gt;--no-cache&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; super:image &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt

virtualenv &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /usr/bin/python3 venv

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; @/path/to/http-config.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  | jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Момент истины: тут же откройте заветный &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Makefile&lt;/code&gt; и перенесите туда эту
команду. Назначьте ей понятный алиас и никогда больше — никогда — не вбивайте ее
вручную. Только через мейк. Вот так:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make docker-build
make venv-install
make connect-add-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Зачем? Потому что через неделю вы забудете команду, а история баша
потрётся. Коллеги тоже будут страдать и гуглить, хотя способ решение на
поверхности – всего-то записать команду.&lt;/p&gt;

&lt;p&gt;Скажем, я работаю над сложным образом докера, и после сборки надо проверить его
в баше. Раньше я бы методом проб и ошибок набрал команду, а затем тыкал
стрелочки вверх и вниз для поиска в истории. Сегодня я сразу сделаю &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Makefile&lt;/code&gt;
такого содержания:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PROJECT = registry.internal.exoscale.ch/exoscale/connect
TAG = 2.7.0

docker-build:
	docker build --no-cache -t ${PROJECT}:${TAG} .

docker-bash:
	docker run -it --rm ${PROJECT}:${TAG} /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;И отныне:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make docker-build docker-bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Каждый раз, когда кто-то спрашивает, зачем мейкфайл, я сперва теряюсь. Первое,
что хочется ответить — да чтобы, так тебя и разтак, не набивать эту хрень руками
в следующий раз, когда что-то сломается. Не все сверхчеловеки, как
ты. Утнерменши вроде меня не помнят аргументы &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker build&lt;/code&gt; наизусть, вот в чем
дело.&lt;/p&gt;

&lt;p&gt;Починил образ, теперь надо проверить его с локальной Кафкой. Это вообще
прелесть. Вот что надо выполнить, чтобы привести систему в нужное состояние:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/zookeeper-server-start.sh config/zookeeper.properties

bin/kafka-server-start.sh config/server.properties

bin/kafka-topics.sh &lt;span class=&quot;nt&quot;&gt;--create&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--topic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;httptest &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--partitions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nt&quot;&gt;--replication-factor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--zookeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;localhost:2181

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/exo-http'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; DELETE | jq

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; @/path/to/config.docker.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  | jq

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/exo-http'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET | jq

bin/kafka-console-producer.sh &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--topic&lt;/span&gt; httptest &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--bootstrap-server&lt;/span&gt; localhost:9092
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Хочется спросить — ребята, вы серьезно полагаете, что это полотно я наберу
руками? Утверждаете, что сами тоже вбиваете? Не верю. Вы однажды набрали её (с
грехом пополам и с Гуглом) и теперь просто ищете истории баша. Я тоже так делал,
но баш не различает историю разных вкладок. Вбейте команду в одной вкладке,
переключитесь во вторую, нажмите вверх — появится команда из первой вкладки. А
во второй совсем другой проект и окружение.&lt;/p&gt;

&lt;p&gt;Поражает, что каждый раз в ревью приходит тело и говорит — это твоя локальная
мулька, проекту она не нужна. Неправда — проекту нужно всё, что экономит время,
даже если речь только обо мне. Файл на десять строк никому не помешает, а мне
сэкономит десять минут гуглежа.&lt;/p&gt;

&lt;p&gt;Того человека я отмечаю. Либо и правда не понимает пользы, но тогда можно
объяснить. Либо самодовольный идиот, и иметь дело с ним не стоит.&lt;/p&gt;

&lt;p&gt;Мейкфайл — база знаний. Это набор действий, которые можно выполнить в проекте. В
нём работают комментарии, можно ставить ссылки на доки, задачи и артефакты. В
Zsh и других продвинутых шеллах работает автокомплит. Набрал &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make do&amp;lt;TAB&amp;gt;&lt;/code&gt; —
вывалился автокомплит. Что еще нужно для счастья!&lt;/p&gt;

&lt;p&gt;Мейкфайл — это записная книжка проекта. С той же целью люди ведут заметки,
ежедневники и дневники: чтобы не забыть. Кто-то скажет: используй баш-скрипт. Но
зачем, если уже есть механизм с метками и пакетными операциями?&lt;/p&gt;

&lt;p&gt;Да, я в курсе, что Make создан для других целей. Это корявая система сборки
сишных проектов, где основная единица — файл. Но дело в том, что ничего лучше не
придумали. Точнее, придумали, но оно вынуждает читать доки и ставить софт, а
мейк стоит на каждом утюге. Как реестр доступных команд он незаменим.&lt;/p&gt;

&lt;p&gt;Поражаюсь проектам, где в корне лежат всякие &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;,
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; и прочая требуха без мейк-файла. Я что, должен гуглить
параметры каждый тулзы — &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;? Почему никто не создал Makefile
с командами:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python-deps:
    pip --bla-bla

js-deps:
    npm --bla-bla

docker-build:
    docker --bla-bla
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Это будет первое, чем я займусь в проекте, неважно, что там горит. Гигиена
важнее пожара.&lt;/p&gt;

&lt;p&gt;Пишите в мейкфайлы всё, что длиннее одного аргумента. Сами же обрадуетесь, когда
откроете проект через год. Не насилуйте мозг тем, кто вносит в мейк новые
команды, в том числе для личных нужд. Тот человек святой, а вы, весь такой
хранитель проекта, поступаете отстойно.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/makefiles/</link>
        <guid isPermaLink="true">https://grishaev.me/makefiles/</guid>
        
        <category>programming</category>
        
        <category>make</category>
        
        
      </item>
    
  </channel>
</rss>
