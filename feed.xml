<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 24 Mar 2020 15:48:07 +0000</pubDate>
    <lastBuildDate>Tue, 24 Mar 2020 15:48:07 +0000</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Текст</title>
        <description>&lt;p&gt;Пишу книгу, и внезапно открыл редактирование текста. Не написание, а именно
редактирование, исправление. Это необычно, изнуряюще, и в итоге — клево.&lt;/p&gt;

&lt;p&gt;Текст похож на мрамор. Когда вы написали текст, это кусок камня,
заготовка. Первый текст всегда кривой: в нем полно междометий и разговорных
оборотов. Предложения плохо связаны: здесь топчитесь на месте, тут рванули без
штанов.&lt;/p&gt;

&lt;p&gt;Смотришь на это поделие и понимаешь, что шансов нет. Однако даже плохой текст
выражает какую-то мысль. Одно это дает тексту миллион очков. Если вы пишете
важную вещь, пусть и кривым языком, это лучше, чем не писать ничего. Даже не
лучше, а вообще ништяк, потому что текст можно &lt;strong&gt;улучшить&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Подобно мрамору, с текста снимают слой за слоем. Первый — убрать очевидный шлак
типа разговорных слов и лишних местоимений. Второй — двигать слова внутри
предложения, искать цепочки из длинных слов вроде “является необходимым в
повседневном использовании”. С опытом глаз видит такие места на уровне рисунка
текста. Я называю это колбасой — глаз скользит по строчке, и вдруг жырнота,
редкие пробелы. Надо исправлять.&lt;/p&gt;

&lt;p&gt;Когда мусор убрали, встают проблемы со смыслом. Понимаешь, что в первом чтении
лишние словечки выполняли роль завесы. Мысль слаба, доказательств нет, но из-за
обилия слов казалось, что все норм. Приходится проверять то, во что верил
полгода назад, а иногда просто сносить абзац.&lt;/p&gt;

&lt;p&gt;Перечитываешь текст и видишь, что не объективен. Мысленно с кем-то споришь и
словно продавливашь точку зрения, хотя должен быть нейтральным. Об этом говорят
пафосные обороты, слова-усилители (конечно, естественно).&lt;/p&gt;

&lt;p&gt;У текста есть ритм, звуковая палитра и визуальный рисунок. Все это редактируется
в отдельном проходе. Наверное, мастера совмещают несколько задач за один проход,
но я так не могу.&lt;/p&gt;

&lt;p&gt;Любой текст станет офигенным, если почистить и сократить его. Удивительно, что
каждый проход вскрывает косяки и возможности, которых раньше не видел. Это как с
мрамором — представьте, глыба &lt;strong&gt;уже содержит&lt;/strong&gt; идеальную скульптуру, нужно
только отрезать лишнее. Но нельзя увидеть лишнее сразу, только по слоям.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Что я сделал перед публикацией? Правильно, почистил мусор. Было много дряни, а
теперь хоть читать можно. Этот абзац тоже можно улучшить, ну да бог с ним.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/text/</link>
        <guid isPermaLink="true">https://grishaev.me/text/</guid>
        
        <category>book</category>
        
        <category>text</category>
        
        
      </item>
    
      <item>
        <title>Что там с книгой? — 3</title>
        <description>&lt;p&gt;Редактирую по второму кругу, вычистил бездну мусора.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542177-17996f00-4f54-11ea-98df-5caf54d86413.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Убрал лишние слова, холиварные вещи, улучшил примеры.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542185-1a945f80-4f54-11ea-9660-0914e8bc67e9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Написал стили для черно-белой раскраски кода. В некоторых местах вообще огонь.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542186-1bc58c80-4f54-11ea-9c33-7f2d75739791.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Получилось 330 страниц.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542187-1c5e2300-4f54-11ea-9760-14214efa2d35.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Код из первой главы прогнал в REPL, нашел косяки.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542190-1cf6b980-4f54-11ea-812b-4dfde83003b9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Пошел второй год, как я занимаюсь книгой.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542192-1cf6b980-4f54-11ea-8566-6a54a07afac1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Спасибо всем, кто присылает ошибки и замечания.&lt;/p&gt;

&lt;p class=&quot;book-page&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/74542194-1d8f5000-4f54-11ea-97f2-04fef802de41.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ждите весной.&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/book-progress3/</link>
        <guid isPermaLink="true">https://grishaev.me/book-progress3/</guid>
        
        <category>book</category>
        
        
      </item>
    
      <item>
        <title>Режем рекламу в Гугле</title>
        <description>&lt;p&gt;Проблема: с недавних пор реклама в Гугле выглядит как обычный результат. Больше
нет выделения цветом или шрифтом. Отличить рекламу можно только по крохотной
метке Ad перед заголовком. На Хабре об этом была &lt;a href=&quot;https://habr.com/ru/company/globalsign/blog/485316/&quot;&gt;отдельная
статья&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Вырезать рекламу Адблоком не получится. В Гугле не дураки сидят и знают, как с
этим бороться. Специальный скрипт проверяет, что реклама вырезана, и рисует ее
снова.&lt;/p&gt;

&lt;p&gt;Не скажу, что я противник рекламы, но иногда Гугл переходит границы. Я ищу
тарифы Модульбанка, и пожалуйста — из-за рекламы они уехали вниз. На первом
месте Тиньков и Открытие, совсем не то, что нужно.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/73189818-1388e700-4136-11ea-9981-f3f6686d4649.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если загуглить “VPN”, реклама займет больше, чем весь экран.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/73189816-12f05080-4136-11ea-9696-b3052b7eff0d.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Способ побороть это есть. Ставим расширение &lt;a href=&quot;https://chrome.google.com/webstore/detail/user-css/okpjlejfhacmgjkmknjhadmkdbcldfcb?hl=en&quot;&gt;User
CSS&lt;/a&gt;. Заходим
на главную гугла, тыкаем голубую кнопочку расширения. Выезжает окошко. Пишем:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;#tvcap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/73189813-12f05080-4136-11ea-9b0f-3949490e1753.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Все, рекламный блок исчезает. Это потому, что User CSS срабатывает на поздней
стадии, когда проверочный скрипт Гугла уже закончил. Правда, на доли секунды
рекламу все же видно, но она быстро пропадает. Выглядит как лаг отрисовки, но
стерпеть можно.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/73189814-12f05080-4136-11ea-9a50-de44a04f5fc7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/ad/</link>
        <guid isPermaLink="true">https://grishaev.me/ad/</guid>
        
        <category>book</category>
        
        
      </item>
    
      <item>
        <title>Что там с книгой? — 2</title>
        <description>&lt;p&gt;Чтобы держать вас в курсе: книга движется, редактирую текст, издательство
найдено. К Новому году не успел, ждите к весне.&lt;/p&gt;

&lt;p&gt;Теперь длинно.&lt;/p&gt;

&lt;p&gt;Как вы знаете, я пишу книгу по Кложе. В ней семь глав про всякие клевые штуки,
которые приходят только с опытом. Формат А5, триста с лишним страниц на
русском. Черновики я выкладывал &lt;a href=&quot;/tag/clojure/&quot;&gt;в блоге&lt;/a&gt;, и теперь готовлю книгу.&lt;/p&gt;

&lt;p&gt;Кто-то спросит, зачем книга, если текст уже интернете? Дело в том, что финальный
результат отличается от черновика. По той же причине я не успел к Новому году:
думал, нужно только собрать текст и поправить мелочи. Оказалось, что
редактирование лишь немного быстрее писания с нуля, и это было почти шоком.&lt;/p&gt;

&lt;p&gt;Когда я писал черновик, за час выходило две страницы. При редактировании за то
же время — четыре-пять страниц. Другими словами, довести текст до ума стоит тех
же усилий, что написать еще половину книги. И это только первый проход — уже
сейчас видно, что понадобиться второй и третий.&lt;/p&gt;

&lt;p&gt;Я рассказываю это не чтобы хвастаться, а чтобы поделиться необычным опытом. С
первого раза текст удивительно сырой. Лишние слова, мусор, местоимения, иногда
просто теряется мысль. Когда сел править первую главу, впал в ступор: как
довести ее до ума? Сейчас я редактирую пятую, и в целом дело медленно, но идет
вперед.&lt;/p&gt;

&lt;p&gt;Все это не зря: читатель получит текст без воды и выноса мозга. Каждое
предложение я упрощаю как только возможно. Только существительное и глагол,
никакого “авторского стиля” (читай графомании).&lt;/p&gt;

&lt;p&gt;Книгу буду издавать в печатном виде по принципу “print on demand”. Это когда
книгу по запросу печатают на специальном станке. Вжух — и книжка готова за 20
минут. Перед анонсом напечатают сто копий на опережение, а дальше по запросу.&lt;/p&gt;

&lt;p&gt;Точную цену пока что не назову, ожидаю в районе 500 рублей. Закладывайте еще 250
на доставку. Если вам посчастливилось жить в Воронеже, дело решится проще.&lt;/p&gt;

&lt;p&gt;Верстаю в Латехе, и это целое приключение. Репозиторий пока закрыт, но потом
сделаю публичным и доработаю электронный вариант.&lt;/p&gt;

&lt;p&gt;Планы прекрасны, осталось только прижать булки к стулу и сделать. Ждите!&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/book-progress2/</link>
        <guid isPermaLink="true">https://grishaev.me/book-progress2/</guid>
        
        <category>book</category>
        
        
      </item>
    
      <item>
        <title>Шульман. Цитаты</title>
        <description>&lt;p&gt;&lt;em&gt;Одно время я писал рецензицю на книгу Екатерины Шульман “Практическая
политология” (см &lt;a href=&quot;/bookshelf/&quot;&gt;книжную полку&lt;/a&gt;). Надергал цитат и понял, что они
настолько хороши, что ни в какой рецензии не нуждаются. Читаем и
наслаждаемся. Текст ниже авторства Екатерины.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Как разобраться в 50 оттенках законотворческой продукции? Степень общественного
вреда от законопроекта не всегда соотносится с тем шумом, который вокруг него
поднимается, – популярная конспирологическая версия «они подсовывают нам свои
кружевные трусы, чтобы отвлечь от Самого Страшного, что происходит за кулисами»
не совсем верна. Медиа есть медиа, и трусы им всегда будут интереснее поправок в
закон о банках и банковской деятельности.&lt;/p&gt;

&lt;p&gt;По степени вредного воздействия на правовое пространство принимаемые законы
можно разделить на три группы. К первой относятся прямые запреты на разного рода
действия: ходить на митинги, материться, курить, призывать к сепаратизму,
осквернять праздники, отдавать сирот на усыновление иностранцам. Они, как ни
странно, наименее токсичны, хотя и причиняют страдания и неудобства
гражданам. Вред от них легко устраним: локальный запрет как приняли, так и
отменили, а навык ходить на митинги утратится, только если запрет просуществует
в неизменном виде 40 лет (спойлер: не просуществует), да и то не факт, если
вспомнить пример советской власти. В России суровость законов компенсируется не
их неисполнением, как обычно думают (плохие законы исполняются, этим-то они и
ужасны), а их нестабильностью. Тут главное – не попасть под раздачу: тем, кого
посадят за непочтение к памятным датам, будет не легче от того, что
соответствующую статью в УК поменяют через три года, а неусыновленный сирота
вообще умрет, его не вернешь. Но, как это ни цинично звучит, общество всегда
переживет любое несчастье отдельных своих членов. Точечные запреты ухудшают
жизнь, но не разрушают правовую систему: это как если бы в доме ободрали обои и
написали на них нехорошее – жить среди этого тяжко, но крыша от такого не
рухнет.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Вред второго порядка наступает от законов, уничтожающих организации и
разрушающих институты. К таковым относится все ужесточение законодательства об
НКО, принятый в первом чтении закон «Об общественном контроле», новая версия
закона «О местном самоуправлении», фактически отменяющая выборы мэров, введение
любых фильтров и заградительных мер на региональных и федеральных
выборах. Почему отменять выборы и убивать политическую конкуренцию – это хуже,
чем обижать курильщиков, ведь курильщиков у нас едва ли не больше, чем активных
избирателей? Потому что институты, чтобы жить, должны непрерывно
функционировать. Говорят, архитектура – это застывшая музыка, так вот в этом же
смысле институты – это застывшие процессы. Если политический процесс не идет,
политический институт разрушается. Восстановление его – дело долгое, даже если
соответствующий вредный закон будет изменен в лучшую сторону. НКО, которые
прекратят свою работу из-за норм закона об иностранных агентах, не просто не
помогут людям, нуждающимся в их помощи, но и исчезнут как организации – ячейки
гражданского общества. Разрушение горизонтальных структур и публичных институтов
– это древесный жучок, съедающий перекрытия в доме. Именно так разрушается
стабильность – не та, которая состоит в процентах обожания главы государства, а
та, которая не дает гражданам внезапно решить, что сейчас самое время пойти
поубивать друг друга.&lt;/p&gt;

&lt;p&gt;Смотрите на название. Средний законопроект обычно дополняет или меняет
какой-нибудь уже существующий закон. Если в названии никакой действующий закон
не упомянут, а предлагается принять нечто совершенно новое, то это скорей всего
«политический» законопроект. Он с равным успехом может быть принят и принести
много горя («О мерах воздействия на лиц, причастных к нарушениям
основополагающих прав и свобод человека, прав свобод граждан РФ») или забыт,
когда информационный повод остынет. Опасайтесь проектов с солидным инициатором и
скучным названием типа «О внесении изменений и дополнений в некоторые
законодательные акты РФ». Под таким именем в свое время был принят закон о
монетизации льгот. Если в названии упомянуты «некоторые законодательные акты»
или «ряд законодательных актов», это плохой знак, как и выражение «в целях
защиты прав граждан». Также насторожитесь, если нечто называют «техническими
поправками». Под этим термином любят прятать разные красочные подарки россиянам
вроде изъятия накопительной части пенсий.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Когда нам говорят: «Дать власть народу», – то на ум приходит картина из «Трех
толстяков»: гвардейцы перешли на сторону народа. То есть мы представляем себе не
просто всю власть сразу, а еще и власть в условиях хаоса.&lt;/p&gt;

&lt;p&gt;В реальности этот пропагандистский дискурс используется для ограничения
избирательных прав граждан, чтобы не пустить их на участки для голосования.&lt;/p&gt;

&lt;p&gt;Истинное лекарство от захвата власти гитлерами и популистами состоит в том,
чтобы власть распределить. Тогда никто не сможет ее захватить одним движением
руки. Чем больше сдержек и противовесов, тем безопаснее ваша ситуация.&lt;/p&gt;

&lt;p&gt;Основные каналы обратной связи между обществом и властью являются одновременно
индикаторами общественных настроений. Как это происходит?&lt;/p&gt;

&lt;p&gt;Их три основных. Это разноуровневые и регулярные выборы. Оба критерия
важны. Если у вас одни выборы раз в десять лет и вы выбираете самого главного
начальника – это не выборы. Выборы должны проходить регулярно и на разных
уровнях, в особенности на местном – это самое важное.&lt;/p&gt;

&lt;p&gt;Второй канал обратной связи – медиа. В этом месте хочется сказать «независимые»,
но это понятие туманное, а сам термин – довольно оценочный. Поэтому я бы сказала
«разнозависимые». Критически важно, чтобы они были на местном и региональном
уровне.&lt;/p&gt;

&lt;p&gt;Третий канал обратной связи – это свободная деятельность гражданских
организаций, НКО.&lt;/p&gt;

&lt;p&gt;Почему эти три канала так важны? Выборы – это не только инструмент ротации
власти, но и лучший вид соцопроса. Люди на выборах демонстрируют, какого рода
проблемы их волнуют. Выборы на местном уровне позволяют быстрее отследить
настроения народа, не дожидаясь бунта у стен Кремля.&lt;/p&gt;

&lt;p&gt;С медиа такая же история. Если СМИ принадлежат разным владельцам, то они
вынуждены ориентироваться на спрос. Поэтому если в каком-то городе наиболее
популярная газета – «Веселый погромщик», то на этой территории что-то
неблагополучно. Лучше обратить внимание на этот сюжет пораньше.&lt;/p&gt;

&lt;p&gt;То же самое – с деятельностью некоммерческих гражданских организаций. Если люди
готовы инвестировать свое время и ресурсы в решение проблемы, значит, для них
это действительно важно.&lt;/p&gt;

&lt;p&gt;Почему эти каналы обратной связи являются и индикаторами, и модераторами? Потому
что, указывая на проблему, они одновременно помогают ее решить. Участие в
выборах разных уровней абсорбирует общественную энергию. Активисты вовлекаются в
легальный политический механизм, а не уходят в подполье. То же самое происходит
со СМИ и гражданскими некоммерческими организациями.&lt;/p&gt;

&lt;p&gt;Разговоры об ограничении избирательных прав приводят к реализации того сценария,
которого они пытаются избежать. В этом опасность демофобической пропаганды,
которая очень эффективна. Легенды о кровожадном народе продаются в две
стороны. Они преподносятся самим гражданам, так называемому широкому
телезрителю. Ему рассказывают об отеческих попечениях власти, которая о нем
заботится, а он такой-сякой, неразумный. Это специфический инфантилизм, который
процветает в патерналистских политических системах.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;В XXI веке следующим скачком, который совершит мир, станет четвертая
промышленная революция. Речь идет о переходе к постиндустриальному обществу и
иным способам производства. Роботизация и «экономика посттруда» – переход на эту
стадию и успех на ней невозможны авторитарными методами. Основа нового общества
– это кооперация, горизонтальные сети, взаимосвязанность, инициатива граждан,
конкуренция и, соответственно, свобода.&lt;/p&gt;

&lt;p&gt;Тут государства как таковые могут сделать не очень много – только обеспечить
условия. Поэтому так опасно поддаваться соблазну авторитарной
модернизации. Сейчас дело даже не в том, что это безнравственно, плохо и унижает
людей, – она просто не работает.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Вторая волна популярности идей авторитарной модернизации пришлась на XX век. Тут
все уже более мрачно. Все тоталитарные проекты XX века были модернизационными и
прогрессистскими. Все они поклонялись индустрии, промышленности, науке (в той
степени, в какой они ее понимали и в какой степени она отвечала их
интересам). Все они выступали за быстрый прогресс, ради которого мы сейчас
должны принести некоторые жертвы, ограничить свои свободы, избавиться от тех,
кто нам мешает: лишних классов, лишних наций, больных, ущербных, неправильных
людей.&lt;/p&gt;

&lt;p&gt;Тоталитарные проекты наследовали футуристическим и авангардистским движениям в
искусстве. Именно поэтому идеи крайней левизны или крайней правизны в своем
государственническом исполнении завлекали души многих культурных, образованных и
талантливых людей: все хотят попасть в будущее, особенно если оно светлое.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Где же мы на этом празднике жизни? Историческое время течет для всех, и на свой
манер Россия тоже столкнулась в уходящем нефтяном десятилетии с ситуацией, когда
деньги доставались почти даром. Как мы распорядились этим историческим подарком,
более-менее понятно: государство решило, что все добро от природных ресурсов, а
граждане только под ногами путаются, и отстранило их от политической жизни и
участия в принятии решений. Проблема скрытой безработицы остроумно решалась
путем чудовищного увеличения, во-первых, числа чиновников, во-вторых,
работников, необходимых для обороны от чиновников и исполнения функций, которые
не исполняет государство (охранники вместо полиции, корпоративные юристы вместо
независимых судей, бухгалтеры вместо налоговой службы). Следовать путем
технического прогресса мы посчитали излишним – зачем что-то изобретать, когда
можно дорого продавать непереработанные углеводороды.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;С точки зрения политической очевидно, что молодые люди нуждаются в образе
будущего, во внятных перспективах, в правилах игры, которые они воспримут как
справедливые, и в социальных лифтах.&lt;/p&gt;

&lt;p&gt;Они их сейчас не только не видят, об этом с ними даже никто не говорит. Они
слышат вокруг себя бесконечное обсуждение различных сортов вчерашнего дня –
советского, досоветского, 90-х, ранних путинских – и сравнительных достоинств
разных покойников – Сталина, Брежнева, Грозного, Николая II. Легко представить,
насколько молодого человека должно от этого тошнить (зато самые живые и
остроумные исторические ресурсы в социальных сетях – Страдающее Средневековье и
Личка императора – созданы студентами!)&lt;/p&gt;

&lt;p&gt;25-летние и моложе – люди, выросшие и живущие в сети. Они не то чтобы не смотрят
ТВ – они смотрят его иначе. Смотрят отдельные программы, находя их в
YouTube. Для развлечения используют YouTube, для новостей и общения – социальные
сети. Соответственно, ТВ-пропаганда идет мимо них. Даже если они слушают, они не
понимают того, что им говорят, потому что весь строй нашей пропаганды рассчитан
на советского человека. Целью ее является активация советских центров в мозгу. А
если у вас нет этих центров в мозгу, если вам их не имплантировали при рождении,
то это все будет проходить мимо вашей головы.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Для чего нужно создавать своему народу такую ужасную репутацию? Для того чтобы
иметь оправдание тому ограничению политических, прежде всего избирательных прав,
которое ты постоянно проводишь. Если люди – дикие кровожадные варвары, то
понятно, что нельзя позволять им выбирать себе власть на выборах. Пока еще ты у
них сидишь, более или менее цивилизованный европеец, а если им самим дать волю,
тут-то они выберут: кто говорит «Гитлера» – это пугалка националистического
характера, кто говорит «Сталина» – это пугалка левоэтатистского направления. И
то, и другое одинаково является аргументом в пользу того, чтобы ограничивать
права граждан на самостоятельное определение своей жизни. Вот для чего нужен
высокий рейтинг Сталина.&lt;/p&gt;

&lt;p&gt;В чем мой научный тезис? Внушение обществу ложных представлений о самом себе
имеет целью представить правительство единственным европейцем в России. В
нынешней социальной реальности это, мягко говоря, уже давно неправда. Нет, не
существует и никакой реальностью не подтверждается, никакими инструментами не
замеряется дихотомия «цивилизованная власть против дикого общества».&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;С другой стороны, необходимо имитировать риторические инструменты автократии. То
есть, грубо говоря, пытаться предстать в публичном пространстве страшнее, чем ты
есть. Во-вторых, необходимо – и это тонкий момент, который часто не до конца
понимают, – представлять себя не страшным диктатором, не кровавым тираном, а,
наоборот, некой цивилизующей и сдерживающей силой, которая вынуждена, правя
таким диким, с такими авторитарными тенденциями народом, как-то его все время
придерживать, как-то все время модерировать его жажду крови.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Подводя итог, стоит сказать, что социальные сети сближают людей и в хорошем, и в
плохом. Преимущественно в хорошем. Социальные сети и информационная открытость
повышают этические стандарты. Признак такого повышения – это самопроизвольная
выработка новых ритуалов публичной скорби. Иными словами, сейчас от людей
требуется не просто сочувствовать, но и что-то сделать, как-то выразить себя,
объединится в этом чувстве. Например, массово приносить свечи и цветы к
посольству или к какому-то еще месту – это совершенно новое явление. Сейчас это
уже делается рутинно – всякий раз, когда случается беда, люди идут со свечами и
цветами. А это говорит о том, что в России спонтанно формируется новая
ритуальность. Ритуалы крайне важны, это очень значимый социальный
конструкт. Во-первых, они закрепляются в обществе, во-вторых, они объединяют
людей. К процессу формирования новой ритуальности в социуме относятся и ритуалы
горевания в социальных сетях: смена аватаров, черно-белые картинки и свечки в
ленте и так далее. Каждый чувствует, что должен у себя что-то написать. Несмотря
на все разговоры о том, что самое время помолчать, присутствие в информационном
пространстве накладывает на человека обязанность как-то выступить. И нас всех в
той или иной степени это делает публичными фигурами. Теперь каждый гражданин,
который зарегистрирован где бы то ни было, несет те обязанности, которые раньше
были присущи только послам, главам государств и лидерам религиозных
конфессий. Ведь в прошлом только они могли публично высказываться о каком-то
значимом событии. Сейчас люди становятся послами от самих себя.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Кроме того, можно задаться вопросом о пределах благотворительности – это тоже
всегда очень болезненная дискуссия, – о его сотрудничестве с государством, о
том, насколько святая цель оправдывает средства, и что вообще такое цель и
средство в такой деятельности. Все вышеперечисленное – проблематика, о которой
можно думать. А на самом деле, мы вторые сутки обсуждаем две мифические
сущности: первая – каких-то злорадствующих либералов, а вторая – каких-то
злорадствующих украинцев. У меня есть очень сильное подозрение, что ни первого,
ни второго не существует. В частности, тексты, которые больше всего цитируются –
пост Божены Рынски (он был удален автором после начала бурной дискуссии в
соцсетях и СМИ – прим.), а также пост журналиста Аркадия Бабченко. Но если
посмотреть в ленту этих людей, то можно понять, что они являются постоянными
поставщиками подобного рода скандалов. Они работают на этой энергии, это их
специфическая функция в публичном пространстве.&lt;/p&gt;

&lt;p&gt;Однако на этот раз они дали на самом деле очень мало материала. Ни у Рынской, ни
у Бабченко никакого особенного злорадства в постах не было. В частности,
Бабченко сказал ровно то, о чем я рассуждала выше: у него закончилась эмпатия,
он не может сочувствовать. А Рынска же, как обычно, в своей малоприятной манере
пишет, что людей жалко, а вот сотрудников телеканала НТВ – не жалко (у нее
персональная особая история с ними). Если же говорить о загадочных украинцах, то
ведь мы все прекрасно знаем, какие удивительные вещи происходят у нас в
социальных сетях: про фабрики троллей – знаем, про Ольгино – знаем, и про
товарища Пригожина – слышали.&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/schulmann/</link>
        <guid isPermaLink="true">https://grishaev.me/schulmann/</guid>
        
        <category>schulmann</category>
        
        
      </item>
    
      <item>
        <title>О чистоте ссылок</title>
        <description>&lt;p&gt;Когда кидаете ссылку в чат, соблюдайте правила гигиены.&lt;/p&gt;

&lt;p&gt;Во-первых, удаляйте из урла все после знака вопроса. Обычно это utm-теги и
другая хрень, чтобы трекать читателя. Кидать такое в общий чат — моветон. Не
понимаю, что в голове у людей, которые кидают такое:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.udemy.com/course/modern-javascript-from-beginning/
?gclid=EAIaIQobChMI7pDe0NaH5gIV1UkYCh1v3wzEEAAYASAAEgJKtvD_BwE
&amp;amp;moon=iapetus&amp;amp;utm_campaign=20181113-Russian&amp;amp;utm_medium=udemyad
s&amp;amp;utm_source=adwords-intl&amp;amp;utm_term=_._ag_81526518630_._kw_%D0%
BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5+javascript+%D0%BE
%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD_._ad_386469984216_._de_c_._dm__
._pl__._ti_kwd-818210464206_._li_1012077_._pd__._
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Тегов в пять раз больше, чем ссылки. Неужели трудно почистить?&lt;/p&gt;

&lt;p&gt;Во-вторых, у многих ссылок можно отбросить слаг. Слаг это текст после
айдишника. Он нужен чтобы понять, что внутри, не открывая ссылку. В эпоху, когда
для каждой ссылки выводится превью, слаг не нужен. Для ссылок StackOverflow
смело его вырезайте.&lt;/p&gt;

&lt;p&gt;Было:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://stackoverflow.com/questions/11227809/why-is-processing
-a-sorted-array-faster-than-processing-an-unsorted-array
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Стало:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://stackoverflow.com/questions/11227809/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В-третьих, для каждой брошенной ссылки добавляйте пару слов о том, что
внутри. Люто бесят ребята, которые постят ссылки про машын лернинг, релизы
программ и прочую хрень без слов от себя. Это хомячковый репост уровня
Одноклассников.&lt;/p&gt;

&lt;p&gt;И еще, осторожней со ссылками Гугла. Они частенько содержат параметр &lt;code class=&quot;highlighter-rouge&quot;&gt;authuser&lt;/code&gt;,
номер аккаунта, под которым нужно зайти в этот сервис. Если вам кинули ссылку на
&lt;code class=&quot;highlighter-rouge&quot;&gt;meet.google.com&lt;/code&gt; c &lt;code class=&quot;highlighter-rouge&quot;&gt;authuser=2&lt;/code&gt;, скорее всего, вы зайдете под левым аккаунтом.&lt;/p&gt;

&lt;p&gt;Уважайте собеседника, кидайте чистые ссылки.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/links/</link>
        <guid isPermaLink="true">https://grishaev.me/links/</guid>
        
        <category>life</category>
        
        <category>links</category>
        
        
      </item>
    
      <item>
        <title>Почему верят в бога</title>
        <description>&lt;p&gt;Раньше я не понимал, как люди среднего возраста приходят в религию. А теперь
понял. Я не уверовал, просто стало ясно.&lt;/p&gt;

&lt;p&gt;К среднему возрасту человек лишается поддержки. В двадцать лет родители еще
здоровы и сильны, своих детей нет, все только начинается. Нечем рисковать,
нечего ценить.&lt;/p&gt;

&lt;p&gt;В тридцать пять выясняется, что пожилым родителям нужна поддержка и
лечение. Своим детям нужно образование, воспитание, квартиры. Все ищут помощи,
заботы и денег от тебя. Надеяться не на кого.&lt;/p&gt;

&lt;p&gt;Вот и получается, что если вокруг никто не поможет, надо искать выше. Вот тут
мифы про бога и его поддержку хорошо заходят. В Библии, если выкинуть всякую
дичь, попадаются весьма мотивирующие цитаты. Например, не бойся, не сомневайся,
и бог тебя не оставит. Согласен, ободряет. Должны быть подборки цитат, я бы даже
почитал.&lt;/p&gt;

&lt;p&gt;Если подумать, жизнь без бога оказывается страшной. Мы одни, и никто не
поможет. Либо принять как должное, либо уверовать, одно из двух.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/god/</link>
        <guid isPermaLink="true">https://grishaev.me/god/</guid>
        
        <category>life</category>
        
        <category>god</category>
        
        
      </item>
    
      <item>
        <title>Как звонить</title>
        <description>&lt;p&gt;Смотрите, простое правило: по телефону нужно представиться первым. Позвонил и
сразу, — я такой-то, звоню затем-то. А потом уже спрашивать, тот ли человек на
проводе. Вопрос “удобно ли разговаривать” вообще не задавать.&lt;/p&gt;

&lt;p&gt;Теперь длинно.&lt;/p&gt;

&lt;p&gt;Новый год близко, банки и опсосы штурмуют звонками. Каждый раз удивляюсь,
насколько плохо сотрудник ведет разговор. Он старается, гротескно вежлив,
следует инструкции. Но инструкцию составили идиоты. Может, собеседник и рад
общаться нормально, но нельзя. Разговор записывают, потом слушают и
разбирают. Отступил от скрипта — минус премия.&lt;/p&gt;

&lt;p&gt;Когда называют мое полное имя и просят подтвердить, это нечестно. Я прямо вижу,
как у сотрудника на экране мои данные: имя, возраст, семейное положение, может
быть, фотография. Он знает обо мне все, да еще просит подтвердить. При этом сам
себя не назвал. Неравноценно как-то. Давай-ка ты первым назовись.&lt;/p&gt;

&lt;p&gt;На приветствие ушло время, а потом выяснилось, что это кредит от Сбербанка. Или
“выгодный” тариф от Билайна. Знал бы раньше, положил бы трубку.&lt;/p&gt;

&lt;p&gt;На надо спрашивать, удобно ли собеседнику разговаривать. Это раздражает. Конечно
неудобно! Вот если бы это было воскресенье после обеда, и ребенок спит, и я на
диване с книжкой, тогда удобно. А так нет! Но раз начали, давай по делу, не тяни
кота за яйца. Человек отложил дела, встал из-за рабочего места. Мысль о том, что
скажешь “неудобно”, и тебе позвонят в восемь вечера, ужасает.&lt;/p&gt;

&lt;p&gt;Раньше, услышав бархатное “Иван Викторович?”, я просто сбрасывал. Теперь
спокойно отвечаю: представьтесь, пожалуйста. Если в должности звучит Сбербанк
или что-то похожее, кладу трубку. Это быстрее и удобнее для обеих сторон.&lt;/p&gt;

&lt;p&gt;С таким подходом, кстати, вы можете знатно пролететь. Однажды я взял телефон у
одной женщины, чтобы перезвонить. А она попросила мой. Я немного удивился, но
продиктовал. Женщина сказала, что ей звонят коллекторы, и она принимает вызов
только от тех, кто в книжке.&lt;/p&gt;

&lt;p&gt;От других я слышал подобное. Сегодня чужой номер — это, скорее всего,
спам. Службы доставки переехали в месаджеры, знакомые и друзья в
соцсети. Незнакомый номер это нарушение ритма, тревога.&lt;/p&gt;

&lt;p&gt;Позвонил — представился, это же просто.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/phone/</link>
        <guid isPermaLink="true">https://grishaev.me/phone/</guid>
        
        <category>phone</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Виджет опечаток</title>
        <description>&lt;p&gt;Вчера прикрутил к блогу костылик. Если выделить текст и нажать &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Enter&lt;/code&gt;, у
вас откроется черновик письма. В нем указан мой адрес, текст с ошибкой и другие
данные, чтобы мне легче найти ошибку. Выглядит это так.&lt;/p&gt;

&lt;p&gt;Делай раз — выделяем текст:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/70032157-eb5d8b80-15bd-11ea-9df9-de81144133d5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Делай два — жмем &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+Enter&lt;/code&gt;, открывается черновик. В какой именно программе,
зависит от настроек системы:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/70032156-eac4f500-15bd-11ea-9b0a-f7891250cea3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Делай три — отправляем, мне падает вот такое письмо:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/70032155-eac4f500-15bd-11ea-93a2-8d4071a90f80.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Все довольны и смеются. Проверял в Хроме, Сафари и FF. Под виндой не могу,
сообщите, если что не так. На Маке работает &lt;code class=&quot;highlighter-rouge&quot;&gt;Command&lt;/code&gt; в дополнение к
&lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt;. Скрипт &lt;a href=&quot;https://github.com/igrishaev/blog/blob/master/assets/typo.js&quot;&gt;простой как лопата&lt;/a&gt;, будут предложения — пишите.&lt;/p&gt;

&lt;p&gt;Уточню, сервисы вроде &lt;a href=&quot;https://orphus.ru/&quot;&gt;orphus.ru&lt;/a&gt; уже не работают. Видимо,
их абузили спамом. Рассылать письма по запросу это прохладная история.&lt;/p&gt;

&lt;p&gt;Уже когда закончил, коллега подсказал способ с
&lt;a href=&quot;https://formspree.io/&quot;&gt;formspree&lt;/a&gt;. Это сервис-агрегатор форм. Умеет слать
письма, стыкуется в Гуглом, понимает AJAX. Возможно, в будущем переделаю виджет
под него.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/typo-widget/</link>
        <guid isPermaLink="true">https://grishaev.me/typo-widget/</guid>
        
        <category>typos</category>
        
        <category>blog</category>
        
        <category>update</category>
        
        
      </item>
    
      <item>
        <title>Тесты в Clojure (второй фрагмент)</title>
        <description>&lt;p&gt;&lt;em&gt;Продолжение &lt;a href=&quot;/clj-book-tests-1&quot;&gt;первой части&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;

    Содержание

&lt;/h2&gt;

&lt;ul id=&quot;toc-item-clj-book-tests-2&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#Транзакция-с-откатом&quot; id=&quot;toc-item-clj-book-tests-2-Транзакция-с-откатом&quot;&gt;Транзакция с откатом&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Тестирование-веб-приложений&quot; id=&quot;toc-item-clj-book-tests-2-Тестирование-веб-приложений&quot;&gt;Тестирование веб-приложений&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Тестирование-систем&quot; id=&quot;toc-item-clj-book-tests-2-Тестирование-систем&quot;&gt;Тестирование систем&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Интеграционные-тесты&quot; id=&quot;toc-item-clj-book-tests-2-Интеграционные-тесты&quot;&gt;Интеграционные тесты&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Другие-решения&quot; id=&quot;toc-item-clj-book-tests-2-Другие-решения&quot;&gt;Другие решения&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#Продвинутые-моки&quot; id=&quot;toc-item-clj-book-tests-2-Продвинутые-моки&quot;&gt;Продвинутые моки&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#Альтернативный-синтаксис&quot; id=&quot;toc-item-clj-book-tests-2-Альтернативный-синтаксис&quot;&gt;Альтернативный синтаксис&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#Вывод-xunit&quot; id=&quot;toc-item-clj-book-tests-2-Вывод-xunit&quot;&gt;Вывод XUnit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#Генерация-данных&quot; id=&quot;toc-item-clj-book-tests-2-Генерация-данных&quot;&gt;Генерация данных&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Порядок-аргументов&quot; id=&quot;toc-item-clj-book-tests-2-Порядок-аргументов&quot;&gt;Порядок аргументов&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;Транзакция-с-откатом&quot;&gt;Транзакция с откатом&lt;/h3&gt;

&lt;p&gt;Другой способ избавиться от изменений в базе — обернуть все действия с ней в
особую транзакцию. Такая транзакция завершается оператором не &lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT&lt;/code&gt;, а
&lt;code class=&quot;highlighter-rouge&quot;&gt;ROLLBACK&lt;/code&gt;, что значит откатить все команды. С точки зрения базы это выглядит
так:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profiles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;При выходе из транзакции мы не увидим последствий &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt; и других
команд, выполненных в ее рамках.&lt;/p&gt;

&lt;p&gt;В пакет JDBC входит функция &lt;code class=&quot;highlighter-rouge&quot;&gt;db-set-rollback-only!&lt;/code&gt;. Она принимает
транзакционное соединение и выставляет ему флаг rollback. Если флаг установлен,
JDBC завершает блок транзакции оператором ROLLBACK.&lt;/p&gt;

&lt;p&gt;Вы уже знакомы с макросом &lt;code class=&quot;highlighter-rouge&quot;&gt;with-db-transaction&lt;/code&gt;: внутри его тела действует
транзакционное соединение, которые получают из JDBC-спеки. Напишем свой макрос
with-db-rollback, который делает то же самое, но дополнительно устанавливает
флаг отката:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defmacro&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with-db-rollback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t-conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/with-db-transaction&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t-conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/db-set-rollback-only!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t-conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Пример его работы:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-db-rollback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*db*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Inserting the data...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/insert!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;do-something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Разработчик следит за тем, чтобы все действия — вставка данных, логика теста —
протекали через &lt;code class=&quot;highlighter-rouge&quot;&gt;tx&lt;/code&gt;, а не &lt;code class=&quot;highlighter-rouge&quot;&gt;*db*&lt;/code&gt;. Иначе изменения в рамках обычного соединения
останутся в базе. Прямо сейчас загрузчик load-data данных ссылается на
глобальную переменную &lt;code class=&quot;highlighter-rouge&quot;&gt;*db*&lt;/code&gt;. Чтобы сообщить ему транзакционное соединение,
придется либо передать параметр, либо связать &lt;code class=&quot;highlighter-rouge&quot;&gt;*db*&lt;/code&gt; с tx формой binding.&lt;/p&gt;

&lt;p&gt;Пример с параметром: все действия с базой принимают tx, который мы установили на
вершине теста.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deftest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test-user-with-rollback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-db-rollback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*db*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load-data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get-user-by-name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Вариант со связанной переменной. В этом случае мы считаем, что все функции
ссылаются на глобальную &lt;code class=&quot;highlighter-rouge&quot;&gt;*db*&lt;/code&gt;. Внутри макроса она станет транзакционным
соединением с откатом.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deftest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test-user-with-rollback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-db-rollback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*db*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*db*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load-data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get-user-by-name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Реализация зависит от того, как в проекте устроена работа с базой. Решение с
откатом хорошо подходит для mount и похожей архитектуры, когда база это
глобальная переменная. В случае с системой компонентов могут возникнуть
трудности с передачей tx от теста к логике и наоборот.&lt;/p&gt;

&lt;p&gt;В свободное время подумайте, как оформить фикстуру с макросом
with-db-rollback. Будет ли она работать с системой компонентов? Что необходимо в
этом случае?&lt;/p&gt;

&lt;h2 id=&quot;Тестирование-веб-приложений&quot;&gt;Тестирование веб-приложений&lt;/h2&gt;

&lt;p&gt;До сих пор мы тестировали отдельные функции, в основном связанные с
расчетами. Такие тесты, как говорят математики, необходимы, но недостаточны. Они
защищают проект от спонтанных изменений, но не обещают, что система
устойчива. Поднимемся на уровень выше и рассмотрим, как тестировать приложение
целиком.&lt;/p&gt;

&lt;p&gt;В главе про веб-разработку мы пришли к важному выводу. Веб-приложение на каждом
уровне остается функций одного аргумента. Где-то внизу это обработчик конкретной
страницы, условный &lt;code class=&quot;highlighter-rouge&quot;&gt;(view-profile-page [request])&lt;/code&gt;. Комбинация маршрутов и
middleware не меняет это соглашение. Конечный объект app, много раз обернутый в
middleware, по-прежнему принимает словарь запроса и возвращает словарь ответа.&lt;/p&gt;

&lt;p&gt;Это определяет, как писать тесты для приложения. Типичный тест составляет запрос
и вызывает приложение как функцию. В ответе ищут HTTP-статус и проверяют на
успех (200, 201) или неудачу (404, 403). Если это JSON-ответ, его тело считывают
в коллекцию и сравнивают с образцом.&lt;/p&gt;

&lt;p&gt;Вспомним приложение из первой главы. Отдельные страницы мы соединили в маршруты
с помощью Compojure. Получилось “голое” приложение. Так мы назвали его потому,
что оно многого не умеет. Например, читать параметры запроса, работать с JSON,
куками, сессиями и так далее. Приложение узнает все это из middleware, в которые
мы его оборачиваем.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defroutes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app-naked&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page-index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/hello&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page-hello&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page-404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app-naked&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap-session&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap-keyword-params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap-params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap-json-body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap-json-response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Напишем несколько тестов для этого приложения. Пусть это будет главная страница
и любая другая, которой нет в дереве маршрутов. Для экономии места проверим
только статус ответа.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deftest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test-app-index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:request-method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:keys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deftest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test-app-page-not-found&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:request-method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/missing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:keys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Как видно из примеров, писать тесты для веб-приложения нетрудно. Однако, мы не
бросим читателя на этом месте. Перечислим несколько приемов, которые облегчат
работу с тестами.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Приложение целиком.&lt;/strong&gt; Избегайте ситуации, когда тест вызывает не приложение, а
один из обработчиков. Плохой пример: (page-index request) вместо app. На текущем
уровне вызов конкретной функции ничего не дает. Даже если страница работает по
отдельности, нет гарантии, что запрос пройдет сквозь маршруты и все
middleware. В боевых проектах middleware несут весомую логику. Это права
доступа, разбор токенов и JWT, данные из прошлых запросов в сессии. Убрав все
это из теста, вы тем самым обманываете себя. Объект app, который вы тестируете,
должен быть максимально “заряжен”, т.е. близок к настоящему веб-серверу.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Библиотека запросов.&lt;/strong&gt; Выше мы объявили запрос в виде словаря. Это работает
только для простых случаев, когда нет ни параметров строки, ни тела. Если не
позаботиться об инструментах, вы дойдете до уровня&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/users/?page=2&amp;amp;order=name&amp;amp;name_contains=smith&amp;amp;search_type=relevance
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;, что совершенно нечитаемо и тяжело в поддержке. В словаре запроса легко
перепутать ключи :request-method и :method, что автор и сделал при написании
книги.&lt;/p&gt;

&lt;p&gt;Чтобы избежать подобных ошибок, воспользуйтесь &lt;code class=&quot;highlighter-rouge&quot;&gt;ring-mock&lt;/code&gt; — библиотекой для
запросов к Ring-приложениям. Ее функции покрывают основные сценарии в
тестах. Так, функция request принимает метод и путь. Если добавить словарь
параметров, то для GET они станут строкой запроса, а для POST — его
телом. URL-кодировку библиотека берет на себя. Другая функция json-body пишет в
запрос тело из коллекции. Рассмотрим несколько примеров.&lt;/p&gt;

&lt;p&gt;Простая страница, запрос &lt;code class=&quot;highlighter-rouge&quot;&gt;GET /help&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mock/request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/help&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ввод данных в форму поиска, &lt;code class=&quot;highlighter-rouge&quot;&gt;GET /movies?search=batman&amp;amp;page=1&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mock/request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/movies&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;batman&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:page&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Новый пользователь из формы, &lt;code class=&quot;highlighter-rouge&quot;&gt;POST /users&lt;/code&gt;. В этом запросе тело (ключ :body)
станет классом &lt;code class=&quot;highlighter-rouge&quot;&gt;ByteArrayInputStream&lt;/code&gt;. Заголовок Content-Type примет значение
&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mock/request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/users&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test@test.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Случай для JSON-API. Адрес /users ожидает не поля формы, а JSON-тело.Такой
запрос составляют из двух функций:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mock/request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mock/json-body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ivan&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test@test.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Проверка тела.&lt;/code&gt; В тестах выше мы проверяли только статус ответа. На практике
одного статуса недостаточно: число 200 еще не говорит, что в ответе именно то,
что нужно. Проверка тела зависит от типа содержимого. Если это текст или HTML,
иногда хватит и регулярного выражения. Например, по фразе “Login” мы определим,
что на этой странице пользователь не авторизован.&lt;/p&gt;

&lt;p&gt;Гораздо интересней вариант с JSON-API. В этом случае нужно восстановить данные
из ответа и сравнить с образцом. Для простоты вызовем приложение
sites-handler. Это заглушка, которой мы пользовались для тестировании
карт. Проверка ниже гарантирует, что при изменении ответа мы получим
ошибку. По-другому говорят, что ответ зафиксирован:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mock/request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/search/v1/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:lat&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:lon&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sites-handler&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cheshire.core/parse-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Недостаток в том, что мы сравниваем данные как есть. Прием не сработает, если в
ответе даты, уникальные идентификаторы (UUID) или машинные номера. Перед
сравнением их исключают с помощью dissoc и map. Представим, что поиск кафе
вернул результат в таком виде:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sites&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Site1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:date-updated&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2019-11-12&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Site2&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:date-updated&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2019-11-10&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Код ниже вернет только те данные, которые не меняются от запроса к запросу. Их и
сравнивают с образцом.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sites&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dissoc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:date-updated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:sites ({:name &quot;Site1&quot;} {:name &quot;Site2&quot;})}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Иногда проверяют не конкретные значения, а структуру ответа. Это удобно на
больших данных, например, когда в каждом элементе двадцать и более полей. В
таком случае ответ проверяют спекой или JSON-схемой.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; obtain the response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cheshire.core/parse-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/valid?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:api.search/handler&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Затраты на спеку или схему окупаются в будущем. Ими проверяют входные параметры,
генерируют данные для тестов, описывают REST API (Swagger, RAML).&lt;/p&gt;

&lt;h2 id=&quot;Тестирование-систем&quot;&gt;Тестирование систем&lt;/h2&gt;

&lt;p&gt;Коротко о том, как пишут тесты в проектах с системами, о которых мы говорили в
отдельной главе. Напомним, система это набор компонентов со связями между
ними. Покрыть каждый компонент тестами нетрудно; проблемы возникают на стыке при
взаимодействии. В проекте обязательно должен быть тест, где система работает как
единое целое.&lt;/p&gt;

&lt;p&gt;Очевидно, чтобы тест прошел, кто-то должен запустить систему и остановить ее
после. На эту роль подходит фикстура. Будем полагать, что переменная системы и
функции ее запуска и останова находятся в модуле system.clj. Напишем фикстуру
&lt;code class=&quot;highlighter-rouge&quot;&gt;fix-system&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system/start!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system/stop!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;На время ее работы в переменной &lt;code class=&quot;highlighter-rouge&quot;&gt;system/system&lt;/code&gt; будет рабочая система. Другие
фикстуры, например, для работы с базой, могут обратиться к ее компонентам
напрямую. Важно только, чтобы в вызове use-fixtures они шли в правильном порядке
(левее — раньше), иначе вы получите Null-ошибки и другие неприятности.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-db-data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:keys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system/system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prepare-test-data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clear-test-data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use-fixtures&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:once&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-db-data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Читатель заметит, что это противоречит правилу, о котором мы говорили в главе
про системы. Что к системе нельзя обращаться напрямую и копаться в ее
компонентах. Что ж, признаем, для тестов в этом плане действуют
послабления. Обращаться к системе нельзя в промышленном коде. Но тесты это не
промышленный код, поэтому на небольшие нарушения в них порой закрывают
глаза. Главное, чтобы программист понимал, что он намерен выиграть. В нашем
случае выигрыш в том, что мы не пробрасываем компонент базы в фикстуру. Это было
бы честнее, но заняло больше строк кода.&lt;/p&gt;

&lt;p&gt;Фикстура &lt;code class=&quot;highlighter-rouge&quot;&gt;fix-system&lt;/code&gt; неслучайно стоит под ключом &lt;code class=&quot;highlighter-rouge&quot;&gt;:once&lt;/code&gt;. Запуск и остановка
системы занимают много времени. В наших интересах прогнать как можно больше
тестов, пока система работает. Если же делать это поштучно, процесс затянется
надолго. Именно с этой проблемой вы столкнетесь при запуске тестов из CIDER. При
попытке выполнить один тест вы будете ждать, пока сработают все фикстуры, в том
числе fix-system.&lt;/p&gt;

&lt;p&gt;Кажется, что пять-десять секунд это немного. Но представьте, что работаете над
задачей и запускаете тест раз за разом — подобные паузы раздражают и сбивают с
ритма. Поделимся с читателем техникой, которая решит эту проблему.&lt;/p&gt;

&lt;p&gt;Потребуется два шага. Первый — научить систему, чтобы она знала о своем
состоянии. Например, включена ли она сейчас или выключена. Проще всего это
сделать через поле с метаданными. Вынесем имя поля в отдельную
переменную. Перепишем start! так, чтобы в метаданных системы появился флаг со
значением true. Аналогично работает stop!, только флаг принимает ложь. Функция
started? возвращает флаг значение из текущей системы.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state-field&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;::started?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component/start-system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-meta&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state-field&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alter-var-root&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;'system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;constantly&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;started?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;some-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state-field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Второй шаг — перед тем, как включить систему в фикстуре, определить, была ли она
запущена вручную. Если нет, фикстура работает как обычно: запуск, тест,
остановка. Если да, это значит, что системой управляют в ручном режиме. В таком
случае фикстура только выполняет тест, что гораздо быстрее, чем полный цикл.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixture-system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;started-manually?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system/started?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;when-not&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;started-manually?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;when-not&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;started-manually?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stop!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Выполните в REPL (system/start!). Теперь можно вызвать тест сколько угодно раз —
не придется ждать, пока запустится система.&lt;/p&gt;

&lt;h2 id=&quot;Интеграционные-тесты&quot;&gt;Интеграционные тесты&lt;/h2&gt;

&lt;p&gt;Не протяжении главы мы постепенно усложняли тесты. С каждым шагом они все меньше
зависят от технических деталей и делают упор на бизнес-логику. По-другому этот
принцип называют пирамидой тестов. В ее основании лежат юнит-тесты — множество
отдельных проверок. Поднимаясь к вершине, мы абстрагируемся от технического
слоя: в какой-то момент тестируем не отдельные функции, а часть приложения.&lt;/p&gt;

&lt;p&gt;Каждый уровень в пирамиде требует специальных знаний. Полагаем, читатель готов к
тому, чтобы подняться на последний этаж — освоить интеграционное
тестирование. Это особая фаза тестов, когда окружение максимально похоже на
промышленное. По-другому их еще называют UI- или Selenium-тестами в честь
одноименного фреймворка. Для большей реалистичности мы не шлем запросы
программно, а имитируем действия человека. Например, управляем браузером: вводим
данные в форму, нажимаем кнопку и проверяем, что появился нужный текст.&lt;/p&gt;

&lt;p&gt;Интеграционные тесты выполняются медленно, потому что включают полный цикл
приложения. Это загрузка страницы, выполнение скриптов, ожидание запроса, во
время которого сервер ходит в базу или очередь задач. Если возникнет ошибка, ее
трудно расследовать из-за длины цепи. Представьте, что вы нажали на кнопку, но
текст не появился. Возможны десятки причин, почему этого не произошло.&lt;/p&gt;

&lt;p&gt;В этом разделе мы рассмотрим, как писать UI-тесты на Clojure. С подготовительной
частью вы уже знакомы: запускаем систему и наполняем базу тестовыми данными. А
вот тест ведет себя по-новому. Он захватывает контроль над браузером и командует
им. Например, открывает страницу &lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:8080/&lt;/code&gt; и щелкает по
ссылкам. В любой момент мы получим адрес страницы, ее заголовок и HTML-код. В
тест добавляют формы &lt;code class=&quot;highlighter-rouge&quot;&gt;(is (= ...))&lt;/code&gt;, чтобы проверить, на какой странице мы
оказались или видит ли пользователь этот виджет.&lt;/p&gt;

&lt;p&gt;Чтобы управлять браузером, понадобится драйвер и библиотека к нему. Под
драйвером понимают утилиту командной строки. Когда драйвер запущен, он принимает
запросы от библиотеки по протоколу HTTP. Одновременно драйвер запускает браузер
в особом режиме, и между ними образуется связь. Фактически, драйвер это
посредник между двумя акторами. Его работа сводится к переводу HTTP-команд в
бинарный протокол браузера и наоборот.&lt;/p&gt;

&lt;p&gt;Каждый браузер работает со своим драйвером. Для Chrome он называется
&lt;code class=&quot;highlighter-rouge&quot;&gt;chromedriver&lt;/code&gt;, для FireFox — &lt;code class=&quot;highlighter-rouge&quot;&gt;geckodriver&lt;/code&gt;. Одноименные утилиты ставятся из
пакетных менеджеров &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt; в зависимости от операционной
системы. Пользователи Windows скачают бинарные файлы с сайта проекта. Драйвер к
Safari называется &lt;code class=&quot;highlighter-rouge&quot;&gt;safaridriver&lt;/code&gt;. С версии 13 он идет в комплекте с Mac OS.&lt;/p&gt;

&lt;p&gt;Для работы с драйвером подойдет библиотека Etaoin. Добавьте ее в зависимости
профиля :dev (библиотека нужна только для тестов):&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;:dev&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:dependencies&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etaoin&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.3.6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Убедитесь, что драйвер находится в одной из папок, перечисленных в PATH,
например, &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;. Другими словами, его можно вызвать в терминале,
просто выполнив &lt;code class=&quot;highlighter-rouge&quot;&gt;chromedriver&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;geckodriver&lt;/code&gt;. Путь до драйвера можно задать
в опциях библиотеки, но пока что мы сами положим его в нужное место.&lt;/p&gt;

&lt;p&gt;Теперь напишем первый тест. Представим, что локальный сервер работает на
порту 8080. Тест открывает форму входа, заполняет поля и нажимает кнопку
“Login”. Страница обновляется, наверху видно приветствие. Пользователь видит
элементы, которые прежде были скрыты (ссылки “My profile”, “Logout”).&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project.integration-tests&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:require&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etaoin.api&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deftest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test-ui-login-ok&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/with-chrome&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/go&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:8080/login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/wait-visible&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/has-text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/fill&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test@test.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/fill&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;J3QQ4-H7H2V&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/click&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:button&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/wait-visible&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/has-text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Welcome&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/visible?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My profile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/visible?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:button&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Logout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Разберем отдельные выражения из этого теста. Форма &lt;code class=&quot;highlighter-rouge&quot;&gt;with-chrome&lt;/code&gt; это макрос,
который запускает Хром на время исполнения тела. Макрос необходим, чтобы
гарантированно закрыть драйвер при выходе или в случае ошибки. Без него пришлось
бы писать код с ручным &lt;code class=&quot;highlighter-rouge&quot;&gt;try/catch&lt;/code&gt;, что порождает вложенность и в целом
неудобно:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/go&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/click&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/quit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Функция &lt;code class=&quot;highlighter-rouge&quot;&gt;wait-visible&lt;/code&gt; ждет до тех пор, пока элемент не появится на экране. К
ней прибегают довольно часто, чтобы дождаться, пока браузер отрисует
верстку. Если не разделить две инструкции ожиданием, между ними будет разница в
несколько миллисекунд. Второе действие либо не успеет выполниться, либо будет
отброшено.&lt;/p&gt;

&lt;p&gt;Ожидание в UI-тестах это нормально. Основное время уходит на то, чтобы дождаться
загрузки и выполнить действия с задержкой, как это свойственно
человеку. &lt;code class=&quot;highlighter-rouge&quot;&gt;Wait-visible&lt;/code&gt; это лишь одна из семейства wait-функций. В их число
входит &lt;code class=&quot;highlighter-rouge&quot;&gt;wait-has-text&lt;/code&gt; (дождаться текст на экране), &lt;code class=&quot;highlighter-rouge&quot;&gt;wait-has-class&lt;/code&gt; (ждать,
пока у элемента не появится класс) и многие другие.&lt;/p&gt;

&lt;p&gt;Драйвер ищет элементы на странице с помощью селекторов. Это строки с особыми
выражениями; различают CSS- и XPath-селекторы. Сейчас мы не будем разбирать их
синтаксис: это долго и заслуживает отдельной главы. Для простоты рассмотрим
альтернативный прием. На элемент можно сослаться, задав его свойства
словарем. Ключи tag и id означают имя тега и его идентификатор. Другие ключи
становятся атрибутами тега. В примере выше селектор &lt;code class=&quot;highlighter-rouge&quot;&gt;{:tag :input :name :email}&lt;/code&gt;
становится выражением &lt;code class=&quot;highlighter-rouge&quot;&gt;input[@name='email']&lt;/code&gt; на языке XPath.&lt;/p&gt;

&lt;p&gt;Подумаем, как улучшить наш тест? Для начала рассмотрим порт 8080. Мы уже знаем,
что подобные значения приходят из конфигурации. Исправьте тест так, чтобы и
сервер, и драйвер работали с одним и тем же портом.&lt;/p&gt;

&lt;p&gt;Вспомним, как работает &lt;code class=&quot;highlighter-rouge&quot;&gt;with-chrome&lt;/code&gt;: он создает новый драйвер, выполняет тело и
выключает его. Если каждый тест обернут в &lt;code class=&quot;highlighter-rouge&quot;&gt;with-chrome&lt;/code&gt;, мы теряем время,
многократно повторяя эти шаги. Сделаем так, чтобы драйвер работал на протяжении
всего прогона тестов. Объявим динамическую переменную и фикстуру, которая
связывает драйвер на время тестов. Зарегистрируем ее с ключом &lt;code class=&quot;highlighter-rouge&quot;&gt;:once&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defonce&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:dynamic&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*driver*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-chrome&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/with-chrome&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*driver*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Мы тестируем приложение в Хроме, самом популярном браузере. Но вот приходит
задача — убедиться, что мы также поддерживаем Firefox. Технически это значит,
что все тесты, которые мы написали для Хрома, должны сработать еще раз в другом
браузере. Скопировать их и заменить with-chrome на with-firefox — сомнительное
решение. Представьте, что через месяц нас попросят добавить Safari. Должен быть
способ, который не влечет за собой разрастание кода.&lt;/p&gt;

&lt;p&gt;Поможет мульти-фикстура, с которой мы знакомились в середине главы. Она
пробегает по списку типов браузеров; в примере ниже это &lt;code class=&quot;highlighter-rouge&quot;&gt;:firefox&lt;/code&gt; и
&lt;code class=&quot;highlighter-rouge&quot;&gt;:chrome&lt;/code&gt;. Макрос &lt;code class=&quot;highlighter-rouge&quot;&gt;with-driver&lt;/code&gt; это общий случай &lt;code class=&quot;highlighter-rouge&quot;&gt;with-chrome&lt;/code&gt; и
аналогов. Отличие в том, что &lt;code class=&quot;highlighter-rouge&quot;&gt;with-driver&lt;/code&gt; ожидает первым аргументом тип
браузера. На каждом шаге фикстура связывает драйвер и выполняет тест.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-multi-driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;doseq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver-type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:firefox&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/with-driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver-type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*driver*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Browser %s&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver-type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Теперь тесты по очереди сработают в каждом из браузеров. Для ясности мы
оборачиваем тест в сообщение о том, в рамках какого браузера его
вызывают. Поддержка нового браузера сводится к тому, чтобы добавить в список
ключ &lt;code class=&quot;highlighter-rouge&quot;&gt;:safari&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;:edge&lt;/code&gt; и другие.&lt;/p&gt;

&lt;p&gt;Еще один способ улучшить тесты — вынести одинаковые действия в фикстуру или
функцию. Например, каждый тест начинается с авторизации и заканчивается выходом
из системы. Чтобы не копировать эти действия каждый раз, напишем фикстуру
&lt;code class=&quot;highlighter-rouge&quot;&gt;fix-login-logout&lt;/code&gt;. В отличии от предыдущих фикстур, ее регистрируют с ключом
&lt;code class=&quot;highlighter-rouge&quot;&gt;:each&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix-login-logout&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;doto&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*driver*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/go&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:8080/login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/fill&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test@test.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/click&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:button&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;doto&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;*driver*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/click&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:button&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn/text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Logout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;e/wait-has-text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Попутно мы внедрили еще одну хорошую практику. Когда несколько функций принимают
одинаковый первый аргумент, их объединяют в макрос doto. Он подставит &lt;code class=&quot;highlighter-rouge&quot;&gt;*driver*&lt;/code&gt;
на второе место в каждый список тела. С &lt;code class=&quot;highlighter-rouge&quot;&gt;doto&lt;/code&gt; код становится немного короче и
чище.&lt;/p&gt;

&lt;h2 id=&quot;Другие-решения&quot;&gt;Другие решения&lt;/h2&gt;

&lt;p&gt;В последнем разделе мы перечислим другие библиотеки, полезные для тестов. Мы не
будем рассматривать их досконально: ограничимся кратким описанием и примером
кода. Все ответы ищите в документации к проектам.&lt;/p&gt;

&lt;h3 id=&quot;Продвинутые-моки&quot;&gt;Продвинутые моки&lt;/h3&gt;

&lt;p&gt;На минуту вернемся к мокам — подмене функции через &lt;code class=&quot;highlighter-rouge&quot;&gt;with-redefs&lt;/code&gt;. Этот макрос
слишком многословен, чтобы работать с ним напрямую. Появились библиотеки,
которые описывают мокинг короче и выразительнее. Одна из них называется
&lt;code class=&quot;highlighter-rouge&quot;&gt;mockery&lt;/code&gt;. Библиотека предлагает макрос &lt;code class=&quot;highlighter-rouge&quot;&gt;with-mock&lt;/code&gt; следующего вида:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-mock&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:target&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:project.path/get-geo-point&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:lat&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;14.23&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:lng&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;52.52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get-geo-point&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cafe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200m&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В примере выше мы “замокали” &lt;code class=&quot;highlighter-rouge&quot;&gt;get-geo-point&lt;/code&gt;, которая, судя по названию,
обращается к стороннему сервису карт. Внутри макроса объект &lt;code class=&quot;highlighter-rouge&quot;&gt;mock&lt;/code&gt; это атом,
внутри которого словарь. Он наполняется данными по мере того, как мы вызываем
цель. Например, сколько раз ее вызвали и с какими аргументами. В выражении ниже
мы добавили проверки на то, что функцию вызвали один раз с аргументами “cafe” и
“200m”.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:keys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;called?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call-count&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call-args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;called?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call-count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cafe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200m&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call-args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Библиотека &lt;code class=&quot;highlighter-rouge&quot;&gt;spy&lt;/code&gt; устроена похожим образом. На функцию навешивается “шпион”,
который копит данные о вызове.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spy-adder&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spy/spy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;calling the function&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spy-adder&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;calls to the spy can be accessed via spy/calls&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spy/calls&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spy-adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;Альтернативный-синтаксис&quot;&gt;Альтернативный синтаксис&lt;/h3&gt;

&lt;p&gt;Проект &lt;code class=&quot;highlighter-rouge&quot;&gt;midje&lt;/code&gt; предлагает другой способ писать тесты. В этой библиотеке мы имеем
дело с фактами. Факт это набор проверок, сгруппированных по смыслу. В примере
ниже факты о функции &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;facts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;about `split`&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;str/split&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a/b/c&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;str/split&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;irrelvant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Стрелка между выражениями это особый оператор, который называется extended
equality, продвинутое равенство. С ее помощью сравнение величин записывается
короче. Например, форма &lt;code class=&quot;highlighter-rouge&quot;&gt;1 =&amp;gt; even?&lt;/code&gt; приходит к виду &lt;code class=&quot;highlighter-rouge&quot;&gt;(even? 1)&lt;/code&gt;. В &lt;code class=&quot;highlighter-rouge&quot;&gt;midje&lt;/code&gt;
встречаются и другие, более сложные стрелки для проверки коллекций и макросов.&lt;/p&gt;

&lt;h3 id=&quot;Вывод-xunit&quot;&gt;Вывод XUnit&lt;/h3&gt;

&lt;p&gt;Плагин &lt;code class=&quot;highlighter-rouge&quot;&gt;test2junit&lt;/code&gt; делает так, что отчет о тестах пишется в XML-файл формата
XUnit. Системы непрерывной интеграции, например, CircleCI или TeamCity понимают,
как отобразить его графически. Такой отчет легче просматривать, чем вывод
консоли. Проблемные места выделены красным, стектрейсы спрятаны под выпадающие
элементы. Плагину нужно задать путь к папке, куда писать файл.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;:plugins&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test2junit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.1.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:test2junit-output-dir&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;target/test2junit&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;Генерация-данных&quot;&gt;Генерация данных&lt;/h3&gt;

&lt;p&gt;Возможно, вы столкнетесь с тем, что для тестов нужен большой объем данных,
например, сто или двести тысяч записей. При этом данные должны быть разнообразны
— нас не устроит один и тот же набор, скопированный тысячу раз. Поможет
библиотека &lt;code class=&quot;highlighter-rouge&quot;&gt;test.check&lt;/code&gt;. Ее модуль gen генерирует случайные данные по заданным
правилам. Особенно полезна генерация записей. В примере ниже мы получаем кортеж
строки, числа и булева типа. Затем применяем его к конструктору &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;User&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defrecord&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user-name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user-id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user-gen&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gen/fmap&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;partial&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-&amp;gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gen/tuple&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gen/not-empty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen/string-alphanumeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                       &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen/nat&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                       &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen/boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gen/sample&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user-gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; =&amp;gt; #user.User{:user-name &quot;dfgJKSHF3&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;;               :user-id 5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;;               :active? false}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Библиотека &lt;code class=&quot;highlighter-rouge&quot;&gt;clojure.spec&lt;/code&gt;, которой мы посвятили главу, идет еще дальше. С
помощью &lt;code class=&quot;highlighter-rouge&quot;&gt;test.check&lt;/code&gt; она генерирует данные по спеке. Так проявляется еще одно
свойство спек: кроме проверки, они подходят для тестовых данных.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user/id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user/name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;string?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user/active?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boolean?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;::user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/keys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:req-un&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user/id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user/name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user/active?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gen/generate&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;s/gen&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;::user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;88546920&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Z4MO7GH80k3mRD&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:active?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Возможности &lt;code class=&quot;highlighter-rouge&quot;&gt;spec.gen&lt;/code&gt; обширны. С ее помощью порождают связанные данные,
например, пользователей, которые ссылаются на профили и наоборот. Вместо
случайных величин можно опираться на допустимые значения (списки имен,
городов). Спеки бывают быть любой вложенности, что открывает поле для
экспериментов.&lt;/p&gt;

&lt;h2 id=&quot;Порядок-аргументов&quot;&gt;Порядок аргументов&lt;/h2&gt;

&lt;p&gt;Необычный вопрос: как писать правильно, &lt;code class=&quot;highlighter-rouge&quot;&gt;(is (= 200 status))&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;(is (= status
200))&lt;/code&gt;? На первый взгляд это абсурд. Разве может порядок аргументов влиять на
равенство? Значения либо равны, либо нет. Однако, макрос &lt;code class=&quot;highlighter-rouge&quot;&gt;is&lt;/code&gt; устроен сложнее,
чем мы думаем. Он разбирает выражение &lt;code class=&quot;highlighter-rouge&quot;&gt;(= 200 status)&lt;/code&gt; и выделяет ожидаемую и
фактическую части. По-английски они называются expected и actual.&lt;/p&gt;

&lt;p&gt;Ожидаемое это значение, на которое рассчитывает тест. Как правило, это готовое
число или коллекция, которую посчитали заранее. Фактическое значение — то, к
которому мы пришли самостоятельно, например, вызвав функцию. Так, число 68 это
ожидаемое, а &lt;code class=&quot;highlighter-rouge&quot;&gt;(int (-&amp;gt;fahr 20))&lt;/code&gt; — действительное. Статус 200 это ожидаемое, а
&lt;code class=&quot;highlighter-rouge&quot;&gt;(:status response)&lt;/code&gt; — действительное.&lt;/p&gt;

&lt;p&gt;Такое разделение необходимо для отчетов. Когда значения не равны, нам бы
хотелось увидеть, где мы ошиблись. Предположим, что в отчете написано: &lt;code class=&quot;highlighter-rouge&quot;&gt;failed
(= 200 403)&lt;/code&gt;. Не совсем ясно, как это трактовать. Мы ожидали успешный ответ, но
не хватило прав доступа? Или это брешь в безопасности — ожидали, что прав на эту
страницу нет, но пользовать все-таки ее увидел? Если же написано expected 200,
got 403, то все ясно — это первый случай (не хватило прав).&lt;/p&gt;

&lt;p&gt;Теперь запомните правило: ожидаемое стоит на первом месте, а действительное на
втором. Поэтому пишите &lt;code class=&quot;highlighter-rouge&quot;&gt;(is (= 200 status))&lt;/code&gt; вместо &lt;code class=&quot;highlighter-rouge&quot;&gt;(is (= status 200))&lt;/code&gt;. Автор
согласен, что это непривычно и противоречит здравому смыслу. Как правило,
фактическое это число, а действительное — длинное выражение, поэтому хочется
записать их как слева. Увы, придется побороть себя и писать как справа:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;;; wrong                     ;; correct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-&amp;gt;fahr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;68&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;68&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-&amp;gt;fahr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Это не ошибка дизайна; правило уходит корнями в прошлое. Первый тестовый
фреймворк &lt;code class=&quot;highlighter-rouge&quot;&gt;JUnit&lt;/code&gt; утвердил именно такой порядок в методах сравнения. Хорошо это
или плохо, судить уже поздно — принцип “expected слева” стал промышленным
стандартом. Аналогичное правило работает в языках Python, Ruby и
других. Отдельные фреймворки предлагают модули, чтобы “перестать говорить как
Йодо”, то есть поменять семантику аргументов. Технически это возможно и в
Clojure, но сейчас мы не будем это рассматривать.&lt;/p&gt;

&lt;p&gt;Особенность expected и actual видна при запуске тестов в CIDER. Один и тот же
тест проверяет статус ответа на 200. Пока все идет хорошо, нет разницы, в каком
порядке мы записали аргументы. Но в случе ошибки вариант слева вносит
путаницу. Согласно ему, нормальным считается статус 404, а не 200. Вариант
справа выводит статусы правильно.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;;; wrong                ;; correct
(is (= status 200))     (is (= 200 status))

Fail in test-...        Fail in test-...
expected: 404           expected: 200
  actual: 200             actual: 404
    diff: - 404             diff: - 200
          + 200                   + 404
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Тем не менее, не стоит соблюдать это правило слишком рьяно. Иногда равенство с
перепутанными аргументами смотрится лучше, и потому код легче
поддерживать. Следить за порядком или нет остается на усмотрение команды. Автор
признаётся, что на этапе черновика перепутал аргументы везде, где это возможно.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/clj-book-tests-2/</link>
        <guid isPermaLink="true">https://grishaev.me/clj-book-tests-2/</guid>
        
        <category>clojure</category>
        
        <category>book</category>
        
        <category>programming</category>
        
        <category>tests</category>
        
        
      </item>
    
  </channel>
</rss>
