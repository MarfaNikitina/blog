<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 12 Feb 2021 14:37:56 +0000</pubDate>
    <lastBuildDate>Fri, 12 Feb 2021 14:37:56 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Быстрее</title>
        <description>&lt;p&gt;Совет тем, кто что-либо организует: делайте всё быстро.&lt;/p&gt;

&lt;p&gt;Как проходит школьная линейка? Дети с родителями пришли и ждут. На сцене
суетятся, ходят туда-сюда. Начинают с задержкой в двадцать минут. Слово
директору. Слово завучу. Слово заслуженной учительнцие. Слово
депутату-спонсору-единоросу. Слово ветерану. Потом, худо-бедно, начинается
сценка про пропавший огонь знаний.&lt;/p&gt;

&lt;p&gt;Как проходят спортивные соревнования? Дети с родителями пришли и ждут. Все на
месте, абсолютно все. Нет, тренер ходит с листочком взад-перед. Начинают с
опозданием в полчаса. Слово директору. Слово заслуженному тренеру. Гимн
России. Потом, худо-бедно, начинаются соревнования.&lt;/p&gt;

&lt;p&gt;Главное правило в том, что заложенное время только увеличивается, но никогда не
уменьшается. Потеряется переходник, сядут батарейки в микрофоне. Ноут уйдет в
перезагрузку (конечно, с обновлением винды). Человек забудет речь и будет
повторять один тезис по пять раз. Затяжкой страдают даже мероприятия за деньги,
а уж любительские — подавно.&lt;/p&gt;

&lt;p&gt;Каждый этап мероприятия надо проводить как можно короче. Например, давать слово
только одному человеку, а не трём. Договориться, что тот самый чел составит речь
на бумажке и выучит, при этом слово должно быть не больше трех минут. Не может —
возьмите другого. Пусть первый напишет, второй говорит.&lt;/p&gt;

&lt;p&gt;Начинать всегда вовремя. Многие проблемы можно решить в полете: менять номера
местами, что-то пропускать. Для этого нужен помощник и находчивость. Если ни
того, ни другого нет, организовывать что-либо ещё рано.&lt;/p&gt;

&lt;p&gt;Хорошая организация — забота о зрителях и уважение к ним. Вы наверное думаете,
что зрители не замечают хорошее проведение, потому что так везде. Это не
так. Если линейка или утренник прошли за сорок минут как по маслу, я обязательно
замечу это вслух. И все говорят — да, и дети не устали, организаторы молодцы.&lt;/p&gt;

&lt;p&gt;Быстрее надо, быстрее.&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/do-faster/</link>
        <guid isPermaLink="true">https://grishaev.me/do-faster/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Заказные письма</title>
        <description>&lt;p&gt;Заказные письма — редкостный идиотизм. Открываешь почтовый ящик и видишь
квитанцию на заказное письмо. То есть почтальон, вместо того, чтобы принести
&lt;em&gt;письмо&lt;/em&gt;, принес &lt;em&gt;бумажку о том&lt;/em&gt;, что пришло письмо. Идешь с бумажкой его
забирать. В итоге сгоняли двух людей там, где хватило бы одного. Еще и стоит
денег. Мне кажется, надо быть реально каким-то канцелярским сухарем, чтобы слать
заказные письма: ни логики, ни экономии, ни заботы о людях.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/pisma/</link>
        <guid isPermaLink="true">https://grishaev.me/pisma/</guid>
        
        <category>pisma</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Цвета ячеек в таблицах</title>
        <description>&lt;p&gt;&lt;em&gt;Эта заметка для тех, кто работает в Экселе и Гугло-таблицах. Прочтите
обязательно.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Итак, вы вбили в табличку данные, например сведения о заказах в вашем
магазине. Выглядит прекрасно:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011322-89437c00-67a8-11eb-842f-3055519dbe5c.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Затем данные поступают в работу. Их нужно обновлять: помечать просроченные
заказы, ошибки логистики, фиксировать звонки. Проще всего это сделать
цветом. Например, красным пометим тех, у кого сбой в доставке. Красный, потому
что это серьезно:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011328-8b0d3f80-67a8-11eb-830c-406f4713c8ec.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Выделим желтым тех, кому не удалось дозвониться:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011333-8c3e6c80-67a8-11eb-93cc-8c1fa55808bb.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Зеленым — тех, кто уже получил заказ, потому что зеленый цвет позитива. Один
заказ еще в сборке, поэтому волноваться нечего. Но все же пометим его серым,
нейтральным цветом. Вот что получилось:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011334-8cd70300-67a8-11eb-9fd4-2b7e32b78cc6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Я думаю, понятно, что так делать не надо. Знаю, все так делают, и я сам до
недавнего времени тоже. Но это не повод продолжать плохую практику. Объясню, в
чем именно проблема и как вести табличку правильно.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Логику цвета нужно угадывать. Мысль о том, что желтый — внимание, а красный —
опасность, основана ни на чем. Критический заказ вполне может быть оранжевым, а
ошибка доставки — синим (случай из практики). Если вы добавили цвет, приходится
объяснять, что он значит. Эта семантика тупо теряется.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Рано или поздно данные нужно экспортировать в CSV для программной
обработки. Поздравляю — все ваши цвета пойдут по одному месту. В CSV нет понятия
цвета. Вам придется создать колонки, которые объясняют цвет.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Из красивой таблицы получился фейерверк, на который невозможно
смотреть. Нельзя выделить все — только что-то малое на общем фоне. Если выделено
все, то на самом деле не выделено ничего — мозг отказывается это воспринимать.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Личный фактор. Меня бесит, когда в таблицу приходит кто-то левый и начинает
красить. Крась у себя. Перед тем, как что-то отмечать цветом, хотя бы спроси,
как лучше поступить. Цвет – последнее, что я посоветую.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Вот что надо сделать, чтобы избежать цветового хаоса.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Завести отдельное поле “статус” или “состояние”. В нем писать простое емкое
слово: сборка, доставка, получено, ошибка. Все таблицы поддерживают
автодополнение по столбцу, поэтому достаточно написать одну букву и нажать
ввод. Программист бы сказал, что это перечисление.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011335-8d6f9980-67a8-11eb-8f18-156b24346adb.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Мне возразят: цвет виден отовсюду, а колонка может уплыть. Если она так важна,
перенесите ее в начало и закрепите.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011337-8d6f9980-67a8-11eb-80c1-97e800f3680c.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Кроме состояния, у заказа может быть много других отметок, которые нужно
фиксировать. Например, факт звонка или отзыва клиента. Заводим логическое поле
“звонили?” или “отзыв?”, в которые ставим TRUE. При необходимости добавим хоть
сто таких полей.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011339-8e083000-67a8-11eb-80ca-382f22b963d1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Используйте фильтры! Выделяем шапку и нажимаем воронку. Выставляем отбор по
любому полю, например те клиенты, кто получил заказ, но которым еще не
позвонили. Фильтры можно сохранять с понятными именами. В Гугло-доке фильтры
бывают глобальные и персональные, когда другие пользователи не замечают их в
процессе работы.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011342-8e083000-67a8-11eb-80c4-6ac01ecddc55.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Вспомним, от чего мы пришли:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/107011334-8cd70300-67a8-11eb-9fd4-2b7e32b78cc6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ужас, ужас.&lt;/p&gt;

&lt;p&gt;Электронные таблицы — великая вещь. Они знакомы нам со школьной скамьи, но мы
знаем только основы и считаем, что этого достаточно. Это не так — время от
времени нужно пересматривать знания. Дурная привычка выделять цветом — тот самый
случай.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/excel-colors/</link>
        <guid isPermaLink="true">https://grishaev.me/excel-colors/</guid>
        
        <category>programming</category>
        
        <category>excel</category>
        
        <category>colors</category>
        
        
      </item>
    
      <item>
        <title>Make makefiles</title>
        <description>&lt;p&gt;У меня две простые просьбы:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;пишите make-файлы;&lt;/li&gt;
  &lt;li&gt;не приставайте к тем, кто их пишет.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Тогда все будет хорошо.&lt;/p&gt;

&lt;p&gt;Теперь длинно. Когда мы садимся за проект, то запускаем в терминале
команды. Сбилдить uberjar, образ докера, переколбасить какие-то файлы. Например:&lt;/p&gt;

&lt;!-- more --&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build &lt;span class=&quot;nt&quot;&gt;--no-cache&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; super:image &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt

virtualenv &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /usr/bin/python3 venv

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; @/path/to/http-config.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  | jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Момент истины: тут же откройте заветный &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Makefile&lt;/code&gt; и перенесите туда эту
команду. Назначьте ей понятный алиас и никогда больше — никогда — не вбивайте ее
вручную. Только через мейк. Вот так:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make docker-build
make venv-install
make connect-add-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Зачем? Потому что через неделю вы забудете команду, а история баша
потрётся. Коллеги тоже будут страдать и гуглить, хотя способ решение на
поверхности – всего-то записать команду.&lt;/p&gt;

&lt;p&gt;Скажем, я работаю над сложным образом докера, и после сборки надо проверить его
в баше. Раньше я бы методом проб и ошибок набрал команду, а затем тыкал
стрелочки вверх и вниз для поиска в истории. Сегодня я сразу сделаю &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Makefile&lt;/code&gt;
такого содержания:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PROJECT = registry.internal.exoscale.ch/exoscale/connect
TAG = 2.7.0

docker-build:
	docker build --no-cache -t ${PROJECT}:${TAG} .

docker-bash:
	docker run -it --rm ${PROJECT}:${TAG} /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;И отныне:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make docker-build docker-bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Каждый раз, когда кто-то спрашивает, зачем мейкфайл, я сперва теряюсь. Первое,
что хочется ответить — да чтобы, так тебя и разтак, не набивать эту хрень руками
в следующий раз, когда что-то сломается. Не все сверхчеловеки, как
ты. Утнерменши вроде меня не помнят аргументы &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker build&lt;/code&gt; наизусть, вот в чем
дело.&lt;/p&gt;

&lt;p&gt;Починил образ, теперь надо проверить его с локальной Кафкой. Это вообще
прелесть. Вот что надо выполнить, чтобы привести систему в нужное состояние:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/zookeeper-server-start.sh config/zookeeper.properties

bin/kafka-server-start.sh config/server.properties

bin/kafka-topics.sh &lt;span class=&quot;nt&quot;&gt;--create&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--topic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;httptest &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--partitions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nt&quot;&gt;--replication-factor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--zookeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;localhost:2181

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/exo-http'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; DELETE | jq

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; @/path/to/config.docker.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  | jq

curl &lt;span class=&quot;s1&quot;&gt;'http://localhost:8083/connectors/exo-http'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET | jq

bin/kafka-console-producer.sh &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--topic&lt;/span&gt; httptest &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--bootstrap-server&lt;/span&gt; localhost:9092
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Хочется спросить — ребята, вы серьезно полагаете, что это полотно я наберу
руками? Утверждаете, что сами тоже вбиваете? Не верю. Вы однажды набрали её (с
грехом пополам и с Гуглом) и теперь просто ищете истории баша. Я тоже так делал,
но баш не различает историю разных вкладок. Вбейте команду в одной вкладке,
переключитесь во вторую, нажмите вверх — появится команда из первой вкладки. А
во второй совсем другой проект и окружение.&lt;/p&gt;

&lt;p&gt;Поражает, что каждый раз в ревью приходит тело и говорит — это твоя локальная
мулька, проекту она не нужна. Неправда — проекту нужно всё, что экономит время,
даже если речь только обо мне. Файл на десять строк никому не помешает, а мне
сэкономит десять минут гуглежа.&lt;/p&gt;

&lt;p&gt;Того человека я отмечаю. Либо и правда не понимает пользы, но тогда можно
объяснить. Либо самодовольный идиот, и иметь дело с ним не стоит.&lt;/p&gt;

&lt;p&gt;Мейкфайл — база знаний. Это набор действий, которые можно выполнить в проекте. В
нём работают комментарии, можно ставить ссылки на доки, задачи и артефакты. В
Zsh и других продвинутых шеллах работает автокомплит. Набрал &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make do&amp;lt;TAB&amp;gt;&lt;/code&gt; —
вывалился автокомплит. Что еще нужно для счастья!&lt;/p&gt;

&lt;p&gt;Мейкфайл — это записная книжка проекта. С той же целью люди ведут заметки,
ежедневники и дневники: чтобы не забыть. Кто-то скажет: используй баш-скрипт. Но
зачем, если уже есть механизм с метками и пакетными операциями?&lt;/p&gt;

&lt;p&gt;Да, я в курсе, что Make создан для других целей. Это корявая система сборки
сишных проектов, где основная единица — файл. Но дело в том, что ничего лучше не
придумали. Точнее, придумали, но оно вынуждает читать доки и ставить софт, а
мейк стоит на каждом утюге. Как реестр доступных команд он незаменим.&lt;/p&gt;

&lt;p&gt;Поражаюсь проектам, где в корне лежат всякие &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;,
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; и прочая требуха без мейк-файла. Я что, должен гуглить
параметры каждый тулзы — &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;? Почему никто не создал Makefile
с командами:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python-deps:
    pip --bla-bla

js-deps:
    npm --bla-bla

docker-build:
    docker --bla-bla
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Это будет первое, чем я займусь в проекте, неважно, что там горит. Гигиена
важнее пожара.&lt;/p&gt;

&lt;p&gt;Пишите в мейкфайлы всё, что длиннее одного аргумента. Сами же обрадуетесь, когда
откроете проект через год. Не насилуйте мозг тем, кто вносит в мейк новые
команды, в том числе для личных нужд. Тот человек святой, а вы, весь такой
хранитель проекта, поступаете отстойно.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/makefiles/</link>
        <guid isPermaLink="true">https://grishaev.me/makefiles/</guid>
        
        <category>programming</category>
        
        <category>make</category>
        
        
      </item>
    
      <item>
        <title>Большой-большой проект</title>
        <description>&lt;p&gt;Часто слышу — Кложа не подходит для больших проектов. Даже цитируют Алекса
Миллера из твиттера: “мы считаем Кложу прекрасным решением для небольших команд
в быстро меняющихся условиях рынка”. Цитату пишу по памяти, видел когда-то
давно.&lt;/p&gt;

&lt;p&gt;Что ж, кому-то не подходит и ладно. Мне лично все подходит, и фирме, где я
работаю, тоже. Всегда найдется тот, кому не подойдет — это не важно. На самом
деле я хотел бы поговорить о “больших” проектах — что это такое и чего от них
ожидать.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Откровение: за весь период работы я не помню именно больших проектов. Они всегда
были малыми и средними, а если логика росла, проект делили на несколько. Так
поступали все команды, где я работал. Любому адекватному человеку ясно, что если
проект усложняется, а сущности громоздятся друг на друга, надо разнести их, и
все станет ясно.&lt;/p&gt;

&lt;p&gt;Когда-то давно я работал в Wargaming. Наша команда занималась кланами и
Глобальной картой. Это был жирный проект на Django, который управлял событиями
на карте и кланами. Со временем стало ясно, что карты и кланы — самостоятельные
сущности, которым трудно ужиться в одном проекте. Поэтому их
разделили. Получилось два проекта — карты и кланы. Для взаимодействия они
сначала лазили в общую базу, потом каждый обрел свой API.&lt;/p&gt;

&lt;p&gt;Было много других случаев, когда одна из фич оттягивала на себя внимание и
мешала другим. Ее просто выносили в отдельный сервис. Уточню, не микро-, а
обычный сервис. Например, единая авторизация, рассылка писем, служба
статистики. Не можешь ужиться со всеми — будь добр живи отдельно. Как в жизни.&lt;/p&gt;

&lt;p&gt;Не понимаю, почему проект обязательно должен быть большим. Откуда эти аргументы,
что, мол, твой язык подходит только для средних проектов, а для больших — нет? У
меня встречный вопрос — почему проект должен быть большим? Откуда эта
гигантомания? Разве лишний вес и размер — не признак инженерного провала?&lt;/p&gt;

&lt;p&gt;Из истории мы знаем примеры того, как стремление к размерам оборачивалось
трагедией. Самый большой корабль — Титаник. Самый большой дирижабль —
Гинденбург. Самый большой ядерный реактор — Чернобыльская АЭС. Люди искренне
верили, что большой значит надежный. Как может потонуть такой большой корабль?
Да вот так, за три часа.&lt;/p&gt;

&lt;p&gt;С Чернобылем, кстати, особая ситуация. По воспоминаниям инженеров, в его размере
не было никакого смысла. Это была чистейшей воды советская гигантомания. Погоня
за показателями, а не качеством и дизайном системы. Инженерам приходилось
управлять реактором как четырьмя отдельными. Из-за колоссальных размеров
температура и другие показатели менялись в зависимости от места замера. К чему
это привело, всем известно.&lt;/p&gt;

&lt;p&gt;Еще в античные времена умные люди поняли, что правильный дизайн означает
соразмерность человеку. Никому не нужен стакан размером с кувшин. Люди не хотят
жить на 151 этаже — их должно быть не более десяти-двенадцати. Код должен быть
кратким — без геттеров, сеттеров и public final static void бла-бла. Он должен
точно описывать задачу. И уж тем более, если, чтобы понять код, нужна платная
IDE с подсказками, то здесь что-то не так.&lt;/p&gt;

&lt;p&gt;Большой проект — это неуловимый Джо. Можно прожить всю жизнь в ожидании Большого
проекта, который никак не настанет. Тешить себя мыслью, что пусть сейчас
неудобно, но когда-то настанет Большой проект, и там-то я развернуть. А те
умники с Кложей будут страдать. Допускаю, будем. Но скорей всего, это никогда не
наступит.&lt;/p&gt;

&lt;p&gt;Вот и сейчас, дорогая редакция: пишу плагин к Kafka на Кложе. Сравниваю с чужими
плагинами на Java. У меня 8 .clj-файлов, у них 20 .java-файлов. У меня 478
строк, у них 1920 строк. Одна и та же задача — отправить сообщеньки в сеть. А
разница по всем показателям в три-пять раз.&lt;/p&gt;

&lt;p&gt;Мне возразят: а как бы ты писал IDE или какую-то другую жирную штуку, которая
вот прямо никак не делится. Ответ в том, что все на свете делится. Не бывает
неделимых вещей. Человек внутри не сплошной, как картошка, а состоит из органов
и системы обращения веществ. Большой проект — это всегда система из ядра и
модулей, которые как-то общаются друг с другом. Поэтому первое, что надо сделать
в большом проекте — нащупать систему. Далее выделить компоненты и решить, как им
общаться. Потом спокойно работать над каждым компонентом в отдельности.&lt;/p&gt;

&lt;p&gt;Но увы, разработчики мечтают о Больших, Сложных проектах. Средние — для ламеров,
это не про нас! Так и получается Большой проект. Вот только он большой не
потому, что является таким, просто его так спроектировали. Поэтому лучше умерить
влажные мечты о больших проектах и подумать, как больше сделать
маленьким. Таким, чтобы оно умещалось в одну голову без насилия над собой.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/big-project/</link>
        <guid isPermaLink="true">https://grishaev.me/big-project/</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Поудалял</title>
        <description>&lt;p&gt;Месяца три назад озаботился порядком в цифровой среде. С ней то же самое, что с
обычной уборкой: если ничего не далать, обрастешь хламом. Со временем теряешься,
что где, каждый сервис требует внимания, словом — надо сжать булочки и
почистить.&lt;/p&gt;

&lt;p&gt;Прошелся по соцсетям, облачным хранилищам и пет-проектам. Получил обалденный
кайф от того, что избавился от балласта. Мысль, что сервис или проект больше не
потревожит тебя, перевешивает любое сожаление. Вот неполный список того, что
пошло под нож и почему.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Фейсбук.&lt;/strong&gt; Абсолютное зло, не поддается никакому осмыслению. Интерфейс из
потустороннего мира, жутко тормозит. Компания погрязла в скандалах, связанных с
торговлей данными, потеряла всякое лицо. Фейсбук возомнил себя модератором всея
интернета, учит как думать и жить. Извините, нет.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ВКонтакте.&lt;/strong&gt; Как и Фейсбук, эта сеть перегружена сущностями сверх
меры. Группы, форумы, обсуждения — теряюсь, что и где. По факту у Вконтакта
только одна нормальная функция — переписка, но ее вытеснил Телеграм. И еще
дурацкое название с предлогом.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Одноклассники.&lt;/strong&gt; Тут все понятно: зарегался, нашел одногруппников и
собутыльников. Дальше только смотреть чужие фотки и отвечать где работаешь и
сколько у тебя детей. Нужные люди давно переехали в Вайберы-Ватсаппы, так что
сервис без надобности.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Инстаграм.&lt;/strong&gt; Закинул туда штук десять фоток, но Инстаграм уже давно не про
фотки, а своего рода Твиттер — треды, сторизы, локальные разборки… Не
употребляю.&lt;/p&gt;

&lt;p&gt;Кстати, удалить соцсети оказалось проще, чем я думал. Хотя сервисы прячут нужный
пункт в дебрях настроек, с самим процессом проблем не возникает. Болтают, что
десять лет назад в Одноклассники надо было отправить бумажное письмо(!) в
Ригу(!!) с заверенной копией паспорта(!!!). Не знаю, правда ли, но сейчас такого
беспредела нет. Кроме того, почти все соцсети позволяют уведомить друзей
сообщением, где разумно указать почту или телефон.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Твиттер.&lt;/strong&gt; Не я закрыл Твиттер, а он меня. Долгое время я парсил Твиттер с
сотни подставных аккаунтов, и по запаре указал ключи с основной учетки. Забанили
по самые помидоры: новый пользователь с моим именем удаляется через минуту. Не
разбираясь, чуваки снесли учетку некоего Игоря Гришаева (хотел одно время
выкупить у него ник igrishaev). Ни на какие письма и запросы Твиттер не
ответил. Штош, прощайте.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Дропбокс.&lt;/strong&gt; Про этот сервис я писал не раз (&lt;a href=&quot;/dropbox-ui/&quot;&gt;пост&lt;/a&gt;, еще
&lt;a href=&quot;/design-dropbox/&quot;&gt;пост&lt;/a&gt;). Вкратце — Дропбокс в свое время был революцией, но скатился в
унылую массу ненужных фич. Ребята выпустили облачные документы, потом какие-то
заметки, команды, менеджер паролей… Венцом стал дичайший ребрендинг,
“нативное” приложение на 300 мегабайт и сто экранов установки. Забрал пару
файлов, снес и закрыл учетку. Помню старый Дропбокс, скорблю.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Queryfeed.&lt;/strong&gt; Удалил свой главный &lt;a href=&quot;/tag/queryfeed/&quot;&gt;пет-проект&lt;/a&gt;. Занимался им аж с
2011 года – десять лет! Вкратце, сервис воровал данные из популярных соцсетей —
в основном Твиттера и Инстаграмма. В работе над ним я испробовал сотни приемов и
трюков, применял всякие выкрутасы. Покупал серые прокси, ходил в сеть через Тор,
парсил HTML — всего и не вспомнишь. Отдельный факт – проект пережил не одну
соцсеть! В свое время подключал Google Buzz и Google Plus. Оба появились и
закрылись, а мой работал.&lt;/p&gt;

&lt;p&gt;Сервис был платный с подпиской в Paypal. Клиентов было не очень много, но на
хостинг хватало. В лучшие месяцы приходило долларов 250. Чтобы справится с
нагрузкой, которая исходила от ботов и скриптов, сделал архитектуру на множество
нод, чтобы в любой момент добавить новую. Ничем серьезным этот бизнес не стал, и
со временем отвлекал от основной работы. Все-таки пасинг сторонних ресурсов —
это паразитирование на чужом бизнесе. В общем, закрыл сервис, не стал даже
спасать бекапы и прочее, просто грохнул все ноды. Ушла эпоха!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Paypal.&lt;/strong&gt; Имел несколько Paypal-учеток для разных проектов. Оставил только
один личный. Нареканий к сервису почти нет, просто работает. Раз в пару лет
меняет интерфейс, и ладно.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Домены.&lt;/strong&gt; За эти годы накопил достаточно доменов для “своих проектов”. Ни один
из них не стал чем-то серьезным, и пора уже оставить надежду на успешный
стартап. Даже не выставил на аукцион — просто удалил, и теперь домены доступны
всем.&lt;/p&gt;

&lt;p&gt;Что там еще? Левые учетки гугла. Хостинги, которыми уже не пользуюсь. Локальные
файлы столетней давности. Как же классно все это удалять — неистово советую
сделать то же самое. Старое освобождает путь для нового, и это просто
замечательно.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/deleted/</link>
        <guid isPermaLink="true">https://grishaev.me/deleted/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Смысл</title>
        <description>&lt;p&gt;Смысл жизни — пожалуй, самый инфантильный вопрос, которым может задаться
человек. В жизни особи не больше смысла, чем в существовании камня. Тем более,
что сама постановка вопроса убога. При чем тут смысл? Почему не цель или
причина? С этими словами в вопросе становится больше смысла (забавная игра
слов).&lt;/p&gt;

&lt;p&gt;Беда в том, что если открыто признаться, что не видишь в жизни смысла, тебе
начнут помогать его найти. Учителя, церковь, патриоты и всякие деды-воевалы
всегда наготове. А то и просто те, кто нашел свой смысл, но не терпит пустоты у
других. Нельзя же без смысла!&lt;/p&gt;

&lt;p&gt;Поэтому самое удобное поведение — притвориться, что видишь смысл и спокойно жить
без всякого смысла.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/meaning-of-life/</link>
        <guid isPermaLink="true">https://grishaev.me/meaning-of-life/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Что там с книгой? Полгода спустя</title>
        <description>&lt;p&gt;Есть несколько новостей насчет книжки.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Издательство сообщает, что скоро ее можно будет купить на
Алиэкспрессе. Отношусь к этому скептически, но все же новая площадка — почему
нет? Вдруг у вас там бонусные баллы, купоны и прочие ништяки, которые давно пора
потратить? Вот и повод. Или вы застряли в Китае, а книги под рукой нет, и вот
пожалуйста. Как будет ссылка, сразу вам сообщу.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;С ноября работаю над вторым изданием книги. В нем исправлено много ошибок,
появились новые разделы вместо старых. Текст стал точнее, ушли смысловые
неточности. Про второе издание будет отдельный пост.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
  &lt;li&gt;Сделал публичным репозиторий книги! Милости прошу:
&lt;a href=&quot;https://github.com/igrishaev/clj-book&quot;&gt;igrishaev/clj-book&lt;/a&gt;. Проект целиком на LaTeX, Docker и немного
Кложи. Уточню, что я не спец в LaTeX, поэтому приму любую критику и
советы. Инструкции по сборке допишу в readme чуть позже.&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
  &lt;li&gt;Книга в процессе перевода на английский. Вместе с &lt;a href=&quot;https://tran.su/&quot;&gt;Евгением Бартовым&lt;/a&gt;
мы работаем уже над седьмой главой. Впереди долгая шлифовка и адаптация правок
из второго издания, но когда-нибудь английская книга выйдет. Меня уже завернули
в The Pragmatic Programmer из-за проблем с правами, так что буду искать другой
вариант.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пока что все. Как видно, почти каждый пункт тянет на отдельный пост, буду
освещать по ходу дела.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/book-progress6/</link>
        <guid isPermaLink="true">https://grishaev.me/book-progress6/</guid>
        
        <category>read</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Фон на созвоне</title>
        <description>&lt;p&gt;Сейчас во всех программах для звонков есть возможность замылить фон. Полезная
вещь. Некоторые звонят из домашней обстановки, и ничего не можешь с собой
поделать: рассматриваешь хрустальную стенку, хлам в углу, корешки книг, зашедшую
в комнату маму.&lt;/p&gt;

&lt;p&gt;Не знаю как у других, а в Google Meet можно поменять фон на картинку и даже
загрузить свою. Прикольная штука, коллеги часто этим пользуются. Но до чего же
скудная фантазия у людей! Один ставит тропической остров, второй — серверную
стойку. Что за убожество.&lt;/p&gt;

&lt;p&gt;Фон должен быть не просто фоном, он должен вызывать какие-то эмоции,
воспоминания. Говоря русским языком — МЭСАДЖ. За пять минут накидал фонов,
которые могут найти отклик в собеседниках. Замечу, что фоны сохраняются, и
дальше их можно переключать мышкой.&lt;/p&gt;

&lt;p&gt;Божественный ковер:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688082-6c0d1b00-4205-11eb-9003-344050eec0bf.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 10 52&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Обои с Мака:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688083-6fa0a200-4205-11eb-954e-8e2239f9c46e.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 14 30&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Винда:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688084-6fa0a200-4205-11eb-9a26-2e03406b7cba.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 14 19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Минитор Эпла за страшные деньги:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688085-70393880-4205-11eb-9c64-c9feab1ed3ee.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 14 10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Наскальная живопись:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688086-70d1cf00-4205-11eb-8309-ed7154f33a2b.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 14 01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ростометр:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688087-716a6580-4205-11eb-8e37-aac9da83a11c.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 13 48&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Мавзолей:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688088-716a6580-4205-11eb-9e3c-2032b6f42b23.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 13 35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Властелин Колец:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688089-716a6580-4205-11eb-96e8-4ce7598c667c.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 13 20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Телевизор:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688090-7202fc00-4205-11eb-9396-ab321f2b3d5c.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 13 08&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Патриотическая тема:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688091-7202fc00-4205-11eb-8949-200e3e7a5ba0.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 12 58&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Зомби:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688093-729b9280-4205-11eb-8fc5-1c2512aac9d6.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 12 46&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Апокалипсис:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688094-729b9280-4205-11eb-806f-e4c8bc86d9a4.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 12 36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Мульты:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688095-73342900-4205-11eb-9e9a-f2ecf31bf86b.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 12 16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Пинк Флойд:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688096-73342900-4205-11eb-8c82-81d68be61805.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 12 01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Матрица:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688098-73ccbf80-4205-11eb-8bb6-4e621e3f85e3.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 11 36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Еще Пинк Флойд:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102688099-73ccbf80-4205-11eb-86f6-9b8dede20894.jpg&quot; alt=&quot;Screenshot 2020-12-19 at 14 11 17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Пользуйтесь и вы!&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/meet-bg/</link>
        <guid isPermaLink="true">https://grishaev.me/meet-bg/</guid>
        
        <category>read</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Порты и прогресс</title>
        <description>&lt;p&gt;Сегодня утром потянулся к ноуту, чтобы вставить провод в USB Type-C. И только
тогда заметил, что все четыре порта заняты.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102498633-478d3380-408b-11eb-9f6d-cc0d635731e2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;По часовой стрелке:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;монитор (Type-C → Displayport, 144Hz);&lt;/li&gt;
  &lt;li&gt;питание ноута;&lt;/li&gt;
  &lt;li&gt;зарядка устройств (телефон, клавиатура, тачпад, наушники);&lt;/li&gt;
  &lt;li&gt;токен доступа для работы.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ноут с четырьмя портами у меня недавно, с осени. Хорошо помню, что как и многие
другие, переживал из-за портов. Как подключать старые девайсы? А что с картами
памяти? Как буду без HDMI? Таскать пачку переходников?&lt;/p&gt;

&lt;p&gt;На первых порах пришлось кое-что докупить: взял фирменный блок c тремя портами
(USB, HDMI и Type-C):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102498690-5a076d00-408b-11eb-92a9-be53d83d8847.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;, а также китайский донгл с нового USB на простой:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102498406-fd0bb700-408a-11eb-87be-5779e41f6247.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Однако сейчас я ими уже не пользуюсь. Пихать чужие флешки небезопасно, а любой
файл проще кинуть в мессенджерах. HDMI не поддерживает герцовку выше 60, и с
недавних пор мне стало это важно (потом напишу отдельно). Карты памяти? Проще
подключить андроид родственника по проводу, чем выковыривать карточку. Тем
более, что китайцы ставят ее под батарею и в другие интересные места.&lt;/p&gt;

&lt;p&gt;Словом, если бы мне кто-то сказал, что уже скоро все четыре порта Type-C будут
заняты, я бы удивился.&lt;/p&gt;

&lt;p&gt;В этот момент я понял, что такое прогресс. Как бы ни стонали обыватели, новый
порт лучше и удобней. Он маленький, мощный, поддерживает все известные
форматы. По нему передают видео, звук, данные, электричество, словом, огонь. Не
удивительно, что два метра кабеля Thunderbolt стоят 14(!) косарей: по сути это
провод из ста проводов.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1059232/102498645-4bb95100-408b-11eb-8654-6c200e89fb80.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для экспериментов я купил короткую версию длиной 0.8 метра и доволен ей.&lt;/p&gt;

&lt;p&gt;Удивляет скорее то, что хотя в ноутах Apple везде новые порты, на других
устройствах все еще старый Lightning. Даже в последних айфонах. Приходится
держать для зарядки провод Type-C → Lightning. Этому пора положить конец —
везде ставить Type-C.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/mac-ports/</link>
        <guid isPermaLink="true">https://grishaev.me/mac-ports/</guid>
        
        <category>read</category>
        
        <category>life</category>
        
        
      </item>
    
  </channel>
</rss>
